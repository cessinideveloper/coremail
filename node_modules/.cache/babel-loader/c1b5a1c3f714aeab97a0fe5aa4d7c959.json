{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst addTemplateReducer = (tempList = [], action) => {\n  if (action.type === \"ADD_TEMPLATE\") {\n    return [...tempList, action.payload];\n  }\n\n  return tempList;\n};\n\nconst loadTemplateReducer = (loadTempList = [], action) => {\n  if (action.type === \"ADD_TEMPLATE\") {\n    return [...loadTempList, action.payload];\n  }\n\n  return loadTempList;\n};\n\nexport default combineReducers({\n  loadTemplate: loadTemplateReducer,\n  templates: addTemplateReducer\n}); // const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\n//     if (action.type === \"MODE_SELECTED\"){\n//         if (action.payload === \"Send\"){\n//             return {activeSend:true, activeMail:false}\n//         }else if (action.payload === \"Mail\"){\n//             return {activeSend:false, activeMail:true}\n//         }else\n//             return mode \n//     }\n//     return mode \n// };","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/reducers/index.js"],"names":["combineReducers","addTemplateReducer","tempList","action","type","payload","loadTemplateReducer","loadTempList","loadTemplate","templates"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;;AAGA,MAAMC,kBAAkB,GAAG,CAACC,QAAQ,GAAC,EAAV,EAAcC,MAAd,KAAyB;AAChD,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAmC;AAC/B,WAAO,CAAC,GAAGF,QAAJ,EAAaC,MAAM,CAACE,OAApB,CAAP;AACH;;AACG,SAAOH,QAAP;AACP,CALD;;AAOA,MAAMI,mBAAmB,GAAG,CAACC,YAAY,GAAC,EAAd,EAAkBJ,MAAlB,KAA6B;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAmC;AAC/B,WAAO,CAAC,GAAGG,YAAJ,EAAiBJ,MAAM,CAACE,OAAxB,CAAP;AACH;;AACG,SAAOE,YAAP;AACP,CALD;;AASA,eAAeP,eAAe,CAAC;AAC3BQ,EAAAA,YAAY,EAACF,mBADc;AAE3BG,EAAAA,SAAS,EAACR;AAFiB,CAAD,CAA9B,C,CAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {combineReducers} from 'redux';\r\n\r\n\r\nconst addTemplateReducer = (tempList=[], action) => {\r\n    if (action.type === \"ADD_TEMPLATE\"){\r\n        return [...tempList,action.payload]\r\n    }\r\n        return tempList\r\n};\r\n\r\nconst loadTemplateReducer = (loadTempList=[], action) => {\r\n    if (action.type === \"ADD_TEMPLATE\"){\r\n        return [...loadTempList,action.payload]\r\n    }\r\n        return loadTempList\r\n};\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    loadTemplate:loadTemplateReducer,\r\n    templates:addTemplateReducer\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\r\n//     if (action.type === \"MODE_SELECTED\"){\r\n//         if (action.payload === \"Send\"){\r\n//             return {activeSend:true, activeMail:false}\r\n//         }else if (action.payload === \"Mail\"){\r\n//             return {activeSend:false, activeMail:true}\r\n//         }else\r\n//             return mode \r\n//     }\r\n//     return mode \r\n// };\r\n"]},"metadata":{},"sourceType":"module"}