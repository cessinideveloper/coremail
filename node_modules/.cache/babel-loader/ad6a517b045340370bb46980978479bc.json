{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\src\\\\components\\\\Dashboard\\\\newCampaign\\\\loadedCampForm.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport store from '../../../store/store';\nimport { storeCampaign } from '../../../actions';\n\nconst LoadedCampForm = ({\n  newCampaignData,\n  setNewCampaignData,\n  loadTheTemplate\n}) => {\n  useEffect(() => {\n    console.log(store.getState());\n    const loadedCamp = store.getState().loadedCampaign ? store.getState().loadedCampaign.campId : null;\n    console.log(loadedCamp);\n\n    if (loadedCamp) {\n      const first = store.getState().campaigns.filter(camp => camp.id === loadedCamp);\n      setNewCampaignData(first[0]);\n      console.log(\"reached\", store.getState().campaigns.filter(camp => camp.id === loadedCamp));\n    }\n  }, []);\n  const camNameRef = useRef(null);\n  const SenderNameRef = useRef(null);\n  const emailSubRef = useRef(null);\n  const SenderEmailRef = useRef(null);\n  console.log(newCampaignData.campName);\n  const {\n    push\n  } = useHistory(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topNavCam  subWrapperCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createCamp   topButtonsCam subWrapperCam\",\n    onClick: () => push(\"/dashboard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashBodyMainCam  subWrapperCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"camFormHolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formFields  Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"camName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, \"Campaign Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: newCampaignData.campName,\n    ref: camNameRef,\n    type: \"text\",\n    id: \"camName\",\n    name: \"camName\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      campName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, \"Sender Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: newCampaignData.senderName,\n    ref: SenderNameRef,\n    type: \"text\",\n    id: \"SenderName\",\n    name: \"SenderName\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      senderName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailSub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, \"Email Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: newCampaignData.senderEmail,\n    ref: emailSubRef,\n    type: \"text\",\n    id: \"emailSub\",\n    name: \"camName\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      emailSub: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Sender Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: newCampaignData.senderEmail,\n    ref: SenderEmailRef,\n    type: \"text\",\n    id: \"SenderEmail\",\n    name: \"SenderEmail\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      senderEmail: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subFieldLong Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"Email List\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"emailList\" //onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.files[0] })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subFieldLong Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Email Body\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"emailBody\",\n    className: \"desBody Fields formButtonsCam\",\n    onClick: () => {\n      push(\"/dashboard/loadedcamp/maileditor\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Deisgn Body\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formButtons Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sendButton Fields formButtonsCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Update & Send\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createButton Fields formButtonsCam\",\n    onClick: () => {\n      store.dispatch(storeCampaign(newCampaignData));\n      push(\"/dashboard\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Update & Exit \")))));\n};\n\nexport default LoadedCampForm;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/newCampaign/loadedCampForm.js"],"names":["React","useEffect","useState","useRef","useHistory","store","storeCampaign","LoadedCampForm","newCampaignData","setNewCampaignData","loadTheTemplate","console","log","getState","loadedCamp","loadedCampaign","campId","first","campaigns","filter","camp","id","camNameRef","SenderNameRef","emailSubRef","SenderEmailRef","campName","push","e","target","value","senderName","senderEmail","emailSub","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../store/store'\r\nimport { storeCampaign } from '../../../actions'\r\n\r\nconst LoadedCampForm = ({ newCampaignData, setNewCampaignData, loadTheTemplate }) => {\r\n\r\n    useEffect(() => {\r\n        console.log(store.getState())\r\n        const loadedCamp = store.getState().loadedCampaign ? store.getState().loadedCampaign.campId : null\r\n        console.log(loadedCamp)\r\n        if (loadedCamp) {\r\n            const first = store.getState().campaigns.filter(camp => camp.id === loadedCamp)\r\n            setNewCampaignData(first[0])\r\n            console.log(\"reached\", store.getState().campaigns.filter(camp => camp.id === loadedCamp))\r\n        }\r\n    }, [])\r\n\r\n    const camNameRef = useRef(null)\r\n    const SenderNameRef = useRef(null)\r\n    const emailSubRef = useRef(null)\r\n    const SenderEmailRef = useRef(null)\r\n\r\n    console.log(newCampaignData.campName)\r\n\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div>\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input defaultValue={newCampaignData.campName} ref={camNameRef} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, campName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input defaultValue={newCampaignData.senderName} ref={SenderNameRef} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input defaultValue={newCampaignData.senderEmail} ref={emailSubRef} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailSub: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input defaultValue={newCampaignData.senderEmail} ref={SenderEmailRef} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderEmail: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email List</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                //onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailBody\">Email Body</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => {\r\n                                        push(\"/dashboard/loadedcamp/maileditor\")\r\n                                    }}\r\n                                >\r\n                                    Deisgn Body\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n\r\n                        >\r\n                            Update & Send{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                store.dispatch(storeCampaign(newCampaignData));\r\n                                push(\"/dashboard\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Update & Exit {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoadedCampForm;"]},"metadata":{},"sourceType":"module"}