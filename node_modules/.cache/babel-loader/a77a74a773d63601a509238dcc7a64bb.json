{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { ActionTypes } from '../actions';\nlet lastCamp = 0;\nconst initialUser = {\n  username: \"\",\n  //string\n  password: \"\",\n  //string\n  email: \"\",\n  //string\n  id: 0,\n  //number\n  token: \"\" //string\n\n};\n\nconst storeUser = (user = initialUser, action) => {\n  if (action.type === ActionTypes.STORE_USER) {\n    return action.payload;\n  }\n\n  return user;\n};\n\nconst storeCampaign = (campaigns = [], action) => {\n  if (action.type === ActionTypes.STORE_CAMPAIGN) {\n    return [...campaigns, {\n      id: ++lastCamp,\n      ...action.payload\n    }];\n  }\n\n  return campaigns;\n};\n\nconst loadCampaign = (loadedCamp = null, action) => {\n  if (action.type === ActionTypes.STORE_CAMPAIGN) {\n    return action.payload;\n  }\n\n  return loadedCamp;\n};\n\nconst rootReducer = combineReducers({\n  userData: storeUser,\n  campaigns: storeCampaign,\n  loadedCampaign: loadCampaign\n});\nexport default rootReducer; // const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\n//     if (action.type === \"MODE_SELECTED\"){\n//         if (action.payload === \"Send\"){\n//             return {activeSend:true, activeMail:false}\n//         }else if (action.payload === \"Mail\"){\n//             return {activeSend:false, activeMail:true}\n//         }else\n//             return mode \n//     }\n//     return mode \n// };","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/reducers/index.js"],"names":["combineReducers","ActionTypes","lastCamp","initialUser","username","password","email","id","token","storeUser","user","action","type","STORE_USER","payload","storeCampaign","campaigns","STORE_CAMPAIGN","loadCampaign","loadedCamp","rootReducer","userData","loadedCampaign"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,IAAIC,QAAQ,GAAG,CAAf;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AACH;AACbC,EAAAA,QAAQ,EAAE,EAFM;AAEF;AACdC,EAAAA,KAAK,EAAE,EAHS;AAGF;AACdC,EAAAA,EAAE,EAAE,CAJY;AAIT;AACPC,EAAAA,KAAK,EAAE,EALS,CAKP;;AALO,CAApB;;AASA,MAAMC,SAAS,GAAG,CAACC,IAAI,GAAGP,WAAR,EAAqBQ,MAArB,KAAgC;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgBX,WAAW,CAACY,UAAhC,EAA4C;AACxC,WAAOF,MAAM,CAACG,OAAd;AACH;;AACD,SAAOJ,IAAP;AACH,CALD;;AAOA,MAAMK,aAAa,GAAG,CAACC,SAAS,GAAG,EAAb,EAAiBL,MAAjB,KAA4B;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgBX,WAAW,CAACgB,cAAhC,EAAgD;AAC5C,WAAO,CAAC,GAAGD,SAAJ,EAAe;AAAET,MAAAA,EAAE,EAAE,EAAEL,QAAR;AAAkB,SAAGS,MAAM,CAACG;AAA5B,KAAf,CAAP;AACH;;AACD,SAAOE,SAAP;AACH,CALD;;AAOA,MAAME,YAAY,GAAG,CAACC,UAAU,GAAG,IAAd,EAAoBR,MAApB,KAA+B;AAChD,MAAIA,MAAM,CAACC,IAAP,KAAgBX,WAAW,CAACgB,cAAhC,EAAgD;AAC5C,WAAON,MAAM,CAACG,OAAd;AACH;;AACD,SAAOK,UAAP;AACH,CALD;;AAQA,MAAMC,WAAW,GAAGpB,eAAe,CAAC;AAChCqB,EAAAA,QAAQ,EAAEZ,SADsB;AAEhCO,EAAAA,SAAS,EAAED,aAFqB;AAGhCO,EAAAA,cAAc,EAAEJ;AAHgB,CAAD,CAAnC;AAMA,eAAeE,WAAf,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { ActionTypes } from '../actions'\r\n\r\nlet lastCamp = 0\r\n\r\nconst initialUser = {\r\n    username: \"\",//string\r\n    password: \"\", //string\r\n    email: \"\",    //string\r\n    id: 0, //number\r\n    token: \"\"//string\r\n}\r\n\r\n\r\nconst storeUser = (user = initialUser, action) => {\r\n    if (action.type === ActionTypes.STORE_USER) {\r\n        return action.payload\r\n    }\r\n    return user\r\n};\r\n\r\nconst storeCampaign = (campaigns = [], action) => {\r\n    if (action.type === ActionTypes.STORE_CAMPAIGN) {\r\n        return [...campaigns, { id: ++lastCamp, ...action.payload }]\r\n    }\r\n    return campaigns\r\n};\r\n\r\nconst loadCampaign = (loadedCamp = null, action) => {\r\n    if (action.type === ActionTypes.STORE_CAMPAIGN) {\r\n        return action.payload\r\n    }\r\n    return loadedCamp\r\n};\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    userData: storeUser,\r\n    campaigns: storeCampaign,\r\n    loadedCampaign: loadCampaign\r\n});\r\n\r\nexport default rootReducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\r\n//     if (action.type === \"MODE_SELECTED\"){\r\n//         if (action.payload === \"Send\"){\r\n//             return {activeSend:true, activeMail:false}\r\n//         }else if (action.payload === \"Mail\"){\r\n//             return {activeSend:false, activeMail:true}\r\n//         }else\r\n//             return mode \r\n//     }\r\n//     return mode \r\n// };\r\n"]},"metadata":{},"sourceType":"module"}