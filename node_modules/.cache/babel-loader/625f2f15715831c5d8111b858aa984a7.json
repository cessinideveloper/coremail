{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini2\\\\src\\\\components\\\\Dashboard\\\\campaignHolder\\\\newCampaign\\\\newCam.js\";\nimport React, { useState, useRef } from 'react';\nimport './newcam.css';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Route, Switch } from 'react-router-dom';\nimport EmailEditor from 'react-email-editor';\nimport axios from 'axios';\nimport store from '../../../../store/store';\nimport CampForm from './campaignForm';\nimport { addCampaign } from '../../../../actions';\n\nconst NewCam = () => {\n  const [newCampaignData, setNewCampaignData] = useState({\n    senderName: \"\",\n    //string\n    senderEmail: \"\",\n    //string\n    campName: \"\",\n    //string\n    emailSub: \"\",\n    //string\n    emailListCVS: 0,\n    //number\n    emailAttachment: null,\n    //null\n    emailBodyJSON: null,\n    //JSONobject\n    emailBodyHTML: null //HTMLobject \n\n  });\n  const {\n    push\n  } = useHistory(null);\n  const emailEditorRef = useRef(null);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard/newcamp/maileditor\",\n    render: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topNavCam  subWrapperCam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createCamp   topButtonsCam subWrapperCam\",\n      onClick: () => push(\"/dashboard/newcamp\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addEmailList topButtonsCam subWrapperCam\",\n      onClick: () => emailEditorRef.current.editor.exportHtml(({\n        design,\n        html\n      }) => {\n        setNewCampaignData({ ...newCampaignData,\n          emailBodyJSON: design,\n          emailBodyHTML: html\n        });\n        setTimeout(() => {\n          let dataForm = new FormData();\n          let Jda = JSON.stringify(newCampaignData.emailBodyJSON);\n          console.log(newHtml());\n          dataForm.append(\"name\", newCampaignData.campName);\n          dataForm.append(\"sender_name\", newCampaignData.senderName);\n          dataForm.append(\"sender_email\", newCampaignData.senderEmail);\n          dataForm.append(\"email_subject\", newCampaignData.emailSub);\n          dataForm.append(\"my_customer\", store.getState().userData.id);\n          dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS));\n          dataForm.append(\"email_message\", \"will see\");\n          dataForm.append(\"temp_json\", Jda);\n          dataForm.append(\"ht\", html);\n          dataForm.append(\"attachment\", newCampaignData.emailAttachment); //newCampaignData.emailAttachment)\n\n          axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => {\n            console.log(res.data);\n            store.dispatch(addCampaign());\n          }).catch(er => {\n            if (er.response) {\n              if (er.response.status === 500) {\n                document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click(); // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\n              }\n            }\n          });\n        }, 0);\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Save & Send\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashBodyMain  subWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(EmailEditor, {\n      ref: emailEditorRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard/newcamp\",\n    render: () => /*#__PURE__*/React.createElement(CampForm, {\n      newCampaignData: newCampaignData,\n      setNewCampaignData: setNewCampaignData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default NewCam;","map":{"version":3,"sources":["C:/Users/suvro/cessini2/src/components/Dashboard/campaignHolder/newCampaign/newCam.js"],"names":["React","useState","useRef","useFormik","useHistory","Route","Switch","EmailEditor","axios","store","CampForm","addCampaign","NewCam","newCampaignData","setNewCampaignData","senderName","senderEmail","campName","emailSub","emailListCVS","emailAttachment","emailBodyJSON","emailBodyHTML","push","emailEditorRef","current","editor","exportHtml","design","html","setTimeout","dataForm","FormData","Jda","JSON","stringify","console","log","newHtml","append","getState","userData","id","Number","post","then","res","data","dispatch","catch","er","response","status","document","getElementsByClassName","click"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport axios from 'axios'\r\nimport store from '../../../../store/store'\r\nimport CampForm from './campaignForm'\r\nimport { addCampaign } from '../../../../actions'\r\n\r\n\r\nconst NewCam = () => {\r\n    const [newCampaignData, setNewCampaignData] = useState({\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: 0,//number\r\n        emailAttachment: null,//null\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    })\r\n    const { push } = useHistory(null)\r\n    const emailEditorRef = useRef(null);\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/newcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/newcamp\")}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div className=\"addEmailList topButtonsCam subWrapperCam\"\r\n                            onClick={() =>\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n                                    setTimeout(() => {\r\n                                        let dataForm = new FormData\r\n                                        let Jda = JSON.stringify(newCampaignData.emailBodyJSON)\r\n                                        console.log(newHtml())\r\n                                        dataForm.append(\"name\", newCampaignData.campName)\r\n                                        dataForm.append(\"sender_name\", newCampaignData.senderName)\r\n                                        dataForm.append(\"sender_email\", newCampaignData.senderEmail)\r\n                                        dataForm.append(\"email_subject\", newCampaignData.emailSub)\r\n                                        dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                        dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS))\r\n                                        dataForm.append(\"email_message\", \"will see\")\r\n                                        dataForm.append(\"temp_json\", Jda)\r\n                                        dataForm.append(\"ht\", html)\r\n                                        dataForm.append(\"attachment\", newCampaignData.emailAttachment)//newCampaignData.emailAttachment)\r\n                                        axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",\r\n                                            dataForm\r\n                                        ).then(res => {\r\n                                            console.log(res.data)\r\n                                            store.dispatch(addCampaign())\r\n                                        })\r\n                                            .catch(er => {\r\n                                                if (er.response) {\r\n                                                    if (er.response.status === 500) {\r\n                                                        document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\r\n                                                        // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            )\r\n\r\n                                    }, 0)\r\n\r\n                                })\r\n                            }\r\n\r\n                        >\r\n                            Save & Send\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/newcamp\" render={() =>\r\n                <CampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                ></CampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default NewCam;"]},"metadata":{},"sourceType":"module"}