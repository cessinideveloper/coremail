{"ast":null,"code":"import { combineReducers } from 'redux'; // const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\n//     if (action.type === \"MODE_SELECTED\"){\n//         if (action.payload === \"Send\"){\n//             return {activeSend:true, activeMail:false}\n//         }else if (action.payload === \"Mail\"){\n//             return {activeSend:false, activeMail:true}\n//         }else\n//             return mode \n//     }\n// };\n\nconst addTemplateReducer = (tempList = [{\n  key: 5,\n  name: \"redux from template\"\n}, {\n  key: 6,\n  name: \"redux Second template\"\n}], action) => {\n  if (action.type === \"ADD_TEMPLATE\") {\n    return [...tempList, action.payload];\n  }\n\n  return tempList;\n};\n\nexport default combineReducers({\n  // modeSelect:modeTypeReducer,\n  templates: addTemplateReducer\n});","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/reducers/index.js"],"names":["combineReducers","addTemplateReducer","tempList","key","name","action","type","payload","templates"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,QAAQ,GAAC,CAAC;AAACC,EAAAA,GAAG,EAAC,CAAL;AAAOC,EAAAA,IAAI,EAAC;AAAZ,CAAD,EAAoC;AAACD,EAAAA,GAAG,EAAC,CAAL;AAAOC,EAAAA,IAAI,EAAC;AAAZ,CAApC,CAAV,EAAqFC,MAArF,KAAgG;AACvH,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAmC;AAC/B,WAAO,CAAC,GAAGJ,QAAJ,EAAaG,MAAM,CAACE,OAApB,CAAP;AACH;;AACG,SAAOL,QAAP;AACP,CALD;;AAOA,eAAeF,eAAe,CAAC;AAC3B;AACAQ,EAAAA,SAAS,EAACP;AAFiB,CAAD,CAA9B","sourcesContent":["import {combineReducers} from 'redux';\r\n\r\n// const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\r\n//     if (action.type === \"MODE_SELECTED\"){\r\n//         if (action.payload === \"Send\"){\r\n//             return {activeSend:true, activeMail:false}\r\n//         }else if (action.payload === \"Mail\"){\r\n//             return {activeSend:false, activeMail:true}\r\n//         }else\r\n//             return mode \r\n//     }\r\n// };\r\n\r\nconst addTemplateReducer = (tempList=[{key:5,name:\"redux from template\"},{key:6,name:\"redux Second template\"}], action) => {\r\n    if (action.type === \"ADD_TEMPLATE\"){\r\n        return [...tempList,action.payload]\r\n    }\r\n        return tempList\r\n};\r\n\r\nexport default combineReducers({\r\n    // modeSelect:modeTypeReducer,\r\n    templates:addTemplateReducer\r\n});"]},"metadata":{},"sourceType":"module"}