{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useEffect,useState,useRef}from'react';import{useHistory}from'react-router-dom';import store from'../../../../store/store';import{storeCampaign}from'../../../../actions';var LoadedCampForm=function LoadedCampForm(_ref){var newCampaignData=_ref.newCampaignData,setNewCampaignData=_ref.setNewCampaignData,loadTheTemplate=_ref.loadTheTemplate;useEffect(function(){console.log(store.getState());var loadedCamp=store.getState().loadedCampaign?store.getState().loadedCampaign.campId:null;console.log(loadedCamp);if(loadedCamp){var first=store.getState().campaigns.filter(function(camp){return camp.id===loadedCamp;});setNewCampaignData(first[0]);console.log(\"reached\",store.getState().campaigns.filter(function(camp){return camp.id===loadedCamp;}));}},[]);var camNameRef=useRef(null);var SenderNameRef=useRef(null);var emailSubRef=useRef(null);var SenderEmailRef=useRef(null);console.log(newCampaignData.campName);var _useHistory=useHistory(null),push=_useHistory.push;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"topNavCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"createCamp   topButtonsCam subWrapperCam\",onClick:function onClick(){return push(\"/dashboard\");}},\"Back\")),/*#__PURE__*/React.createElement(\"div\",{className:\"dashBodyMainCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"camFormHolder\"},/*#__PURE__*/React.createElement(\"form\",{className:\"formFields  Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leftFields Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"camName\"},\"Campaign Name\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.name,ref:camNameRef,type:\"text\",id:\"camName\",name:\"camName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{name:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"SenderName\"},\"Sender Name\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.sender_name,ref:SenderNameRef,type:\"text\",id:\"SenderName\",name:\"SenderName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{sender_name:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailSub\"},\"Email Subject\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.email_subject,ref:emailSubRef,type:\"text\",id:\"emailSub\",name:\"camName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{email_subject:e.target.value}));}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"rightFields Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"SenderEmail\"},\"Sender Email\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.sender_email,ref:SenderEmailRef,type:\"text\",id:\"SenderEmail\",name:\"SenderEmail\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{sender_email:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subFieldLong Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailList\"},\"Email Attachment\"),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"emailList\",files:[newCampaignData.attachment],onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{attachment:e.target.files[0]}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subFieldLong Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailBody\"},\"Email Body\"),/*#__PURE__*/React.createElement(\"div\",{id:\"emailBody\",className:\"desBody Fields formButtonsCam\",onClick:function onClick(){push(\"/dashboard/loadedcamp/maileditor\");setTimeout(function(){loadTheTemplate(newCampaignData.temp_json);},500);}},\"Deisgn Body\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"formButtons Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sendButton Fields formButtonsCam\"},\"Update & Send\"),/*#__PURE__*/React.createElement(\"div\",{className:\"createButton Fields formButtonsCam\",onClick:function onClick(){store.dispatch(storeCampaign(newCampaignData));push(\"/dashboard\");}},\"Update & Exit \")))));};export default LoadedCampForm;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/campaignHolder/newCampaign/loadedCampForm.js"],"names":["React","useEffect","useState","useRef","useHistory","store","storeCampaign","LoadedCampForm","newCampaignData","setNewCampaignData","loadTheTemplate","console","log","getState","loadedCamp","loadedCampaign","campId","first","campaigns","filter","camp","id","camNameRef","SenderNameRef","emailSubRef","SenderEmailRef","campName","push","name","e","target","value","sender_name","email_subject","sender_email","attachment","files","setTimeout","temp_json","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../../store/store'\r\nimport { storeCampaign } from '../../../../actions'\r\n\r\nconst LoadedCampForm = ({ newCampaignData, setNewCampaignData, loadTheTemplate }) => {\r\n\r\n    useEffect(() => {\r\n        console.log(store.getState())\r\n        const loadedCamp = store.getState().loadedCampaign ? store.getState().loadedCampaign.campId : null\r\n        console.log(loadedCamp)\r\n        if (loadedCamp) {\r\n            const first = store.getState().campaigns.filter(camp => camp.id === loadedCamp)\r\n            setNewCampaignData(first[0])\r\n            console.log(\"reached\", store.getState().campaigns.filter(camp => camp.id === loadedCamp))\r\n        }\r\n    }, [])\r\n\r\n    const camNameRef = useRef(null)\r\n    const SenderNameRef = useRef(null)\r\n    const emailSubRef = useRef(null)\r\n    const SenderEmailRef = useRef(null)\r\n\r\n    console.log(newCampaignData.campName)\r\n\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div>\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input defaultValue={newCampaignData.name} ref={camNameRef} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input defaultValue={newCampaignData.sender_name} ref={SenderNameRef} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input defaultValue={newCampaignData.email_subject} ref={emailSubRef} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, email_subject: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input defaultValue={newCampaignData.sender_email} ref={SenderEmailRef} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_email: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n\r\n                                <input type=\"file\" id=\"emailList\" files={[newCampaignData.attachment]}\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, attachment: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailBody\">Email Body</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => {\r\n                                        push(\"/dashboard/loadedcamp/maileditor\")\r\n                                        setTimeout(() => {\r\n                                            loadTheTemplate(newCampaignData.temp_json)\r\n                                        }, 500)\r\n                                    }}\r\n                                >\r\n                                    Deisgn Body\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n\r\n                        >\r\n                            Update & Send{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                store.dispatch(storeCampaign(newCampaignData));\r\n                                push(\"/dashboard\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Update & Exit {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoadedCampForm;"]},"metadata":{},"sourceType":"module"}