{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\src\\\\components\\\\Dashboard\\\\newCampaign\\\\loadedCampForm.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport store from '../../../store/store';\nimport { storeCampaign } from '../../../actions';\n\nconst LoadedCampForm = ({\n  newCampaignData,\n  setNewCampaignData\n}) => {\n  const camNameRef = useRef(null);\n  const SenderNameRef = useRef(null);\n  const emailSubRef = useRef(null);\n  const SenderEmailRef = useRef(null);\n  console.log(newCampaignData);\n  useEffect(() => {\n    camNameRef.current.value = \"check\"; //newCampaignData.campName\n\n    SenderNameRef.current.value = newCampaignData.senderName;\n    emailSubRef.current.value = newCampaignData.emailSub;\n    SenderEmailRef.current.value = newCampaignData.senderEmail;\n  });\n  const {\n    push\n  } = useHistory(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topNavCam  subWrapperCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createCamp   topButtonsCam subWrapperCam\",\n    onClick: () => push(\"/dashboard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashBodyMainCam  subWrapperCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"camFormHolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formFields  Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"camName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Campaign Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: camNameRef,\n    type: \"text\",\n    id: \"camName\",\n    name: \"camName\" //// onChange={e => setNewCampaignData({ ...newCampaignData, campName: e.target.value })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, \"Sender Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: SenderNameRef,\n    type: \"text\",\n    id: \"SenderName\",\n    name: \"SenderName\" //onChange={e => setNewCampaignData({ ...newCampaignData, senderName: e.target.value })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailSub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, \"Email Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: emailSubRef,\n    type: \"text\",\n    id: \"emailSub\",\n    name: \"camName\" //onChange={e => setNewCampaignData({ ...newCampaignData, emailSub: e.target.value })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Sender Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: SenderEmailRef,\n    type: \"text\",\n    id: \"SenderEmail\",\n    name: \"SenderEmail\" //onChange={e => setNewCampaignData({ ...newCampaignData, senderEmail: e.target.value })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subFieldLong Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Email List\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"emailList\" //onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.files[0] })}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subFieldLong Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Email Body\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"emailBody\",\n    className: \"desBody Fields formButtonsCam\",\n    onClick: () => push(\"/dashboard/newcamp/maileditor\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"Deisgn Body\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formButtons Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sendButton Fields formButtonsCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Update & Send\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createButton Fields formButtonsCam\",\n    onClick: () => {\n      store.dispatch(storeCampaign(newCampaignData));\n      push(\"/dashboard\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Update & Exit \")))));\n};\n\nexport default LoadedCampForm;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/newCampaign/loadedCampForm.js"],"names":["React","useEffect","useState","useRef","useHistory","store","storeCampaign","LoadedCampForm","newCampaignData","setNewCampaignData","camNameRef","SenderNameRef","emailSubRef","SenderEmailRef","console","log","current","value","senderName","emailSub","senderEmail","push","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../store/store'\r\nimport { storeCampaign } from '../../../actions'\r\n\r\nconst LoadedCampForm = ({ newCampaignData, setNewCampaignData }) => {\r\n\r\n    const camNameRef = useRef(null)\r\n    const SenderNameRef = useRef(null)\r\n    const emailSubRef = useRef(null)\r\n    const SenderEmailRef = useRef(null)\r\n\r\n    console.log(newCampaignData)\r\n\r\n    useEffect(() => {\r\n        camNameRef.current.value = \"check\"//newCampaignData.campName\r\n        SenderNameRef.current.value = newCampaignData.senderName\r\n        emailSubRef.current.value = newCampaignData.emailSub\r\n        SenderEmailRef.current.value = newCampaignData.senderEmail\r\n    })\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div>\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input ref={camNameRef} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                //// onChange={e => setNewCampaignData({ ...newCampaignData, campName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input ref={SenderNameRef} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                //onChange={e => setNewCampaignData({ ...newCampaignData, senderName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input ref={emailSubRef} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                //onChange={e => setNewCampaignData({ ...newCampaignData, emailSub: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input ref={SenderEmailRef} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                //onChange={e => setNewCampaignData({ ...newCampaignData, senderEmail: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email List</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                //onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailBody\">Email Body</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => push(\"/dashboard/newcamp/maileditor\")}\r\n                                >\r\n                                    Deisgn Body\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n\r\n                        >\r\n                            Update & Send{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                store.dispatch(storeCampaign(newCampaignData));\r\n                                push(\"/dashboard\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Update & Exit {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoadedCampForm;"]},"metadata":{},"sourceType":"module"}