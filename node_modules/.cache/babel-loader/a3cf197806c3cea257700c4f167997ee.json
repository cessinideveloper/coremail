{"ast":null,"code":"import { call, take } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport store from '../store/store';\nimport { ActionTypes } from '../actions';\n\nconst fetchEmaillist = async () => {\n  const re = await fetch(\"https://emailengine2020.herokuapp.com/newemail/\");\n  return re(re);\n};\n\nexport function* watchUserSignIn(payload) {\n  while (true) {\n    const {\n      payload\n    } = yield take(ActionTypes.GET_ALL_EMAIL_LIST);\n    yield call(getEmailList, payload);\n  }\n}\nexport function* getEmailList(payload) {\n  const allEmailList = yield call(fetchEmaillist);\n  const filteredEmailList = allEmailList.filter(emailList => emailList.id === payload);\n  yield console.log(filteredEmailList);\n}","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/saga/index.js"],"names":["call","take","axios","store","ActionTypes","fetchEmaillist","re","fetch","watchUserSignIn","payload","GET_ALL_EMAIL_LIST","getEmailList","allEmailList","filteredEmailList","filter","emailList","id","console","log"],"mappings":"AAAA,SACIA,IADJ,EACUC,IADV,QAEO,oBAFP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAGA,MAAMC,cAAc,GAAG,YAAY;AAC/B,QAAMC,EAAE,GAAG,MAAMC,KAAK,CAAC,iDAAD,CAAtB;AACA,SAAOD,EAAE,CAACA,EAAD,CAAT;AACH,CAHD;;AAKA,OAAO,UAAUE,eAAV,CAA0BC,OAA1B,EAAmC;AACtC,SAAO,IAAP,EAAa;AACT,UAAM;AAAEA,MAAAA;AAAF,QAAc,MAAMR,IAAI,CAACG,WAAW,CAACM,kBAAb,CAA9B;AACA,UAAMV,IAAI,CAACW,YAAD,EAAeF,OAAf,CAAV;AACH;AACJ;AAED,OAAO,UAAUE,YAAV,CAAuBF,OAAvB,EAAgC;AACnC,QAAMG,YAAY,GAAG,MAAMZ,IAAI,CAACK,cAAD,CAA/B;AACA,QAAMQ,iBAAiB,GAAGD,YAAY,CAACE,MAAb,CAAoBC,SAAS,IAAIA,SAAS,CAACC,EAAV,KAAiBP,OAAlD,CAA1B;AACA,QAAMQ,OAAO,CAACC,GAAR,CAAYL,iBAAZ,CAAN;AACH","sourcesContent":["import {\r\n    call, take\r\n} from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport store from '../store/store'\r\nimport { ActionTypes } from '../actions'\r\n\r\n\r\nconst fetchEmaillist = async () => {\r\n    const re = await fetch(\"https://emailengine2020.herokuapp.com/newemail/\");\r\n    return re(re);\r\n}\r\n\r\nexport function* watchUserSignIn(payload) {\r\n    while (true) {\r\n        const { payload } = yield take(ActionTypes.GET_ALL_EMAIL_LIST)\r\n        yield call(getEmailList, payload)\r\n    }\r\n}\r\n\r\nexport function* getEmailList(payload) {\r\n    const allEmailList = yield call(fetchEmaillist)\r\n    const filteredEmailList = allEmailList.filter(emailList => emailList.id === payload)\r\n    yield console.log(filteredEmailList)\r\n}"]},"metadata":{},"sourceType":"module"}