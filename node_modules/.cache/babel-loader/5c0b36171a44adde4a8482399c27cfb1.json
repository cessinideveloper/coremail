{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\src\\\\components\\\\App.js\";\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport EmailEditor from 'react-email-editor';\nimport { useSpring, animated, config } from 'react-spring';\nimport { loadTempalteAct, newTempalte } from '../actions';\nimport './App.css';\nimport TopNav from './topNav';\nimport LowNav from './lowNav';\nimport FirstBody from './firstBody';\nimport MailEditor from './mailEditor';\nimport LowButtons from './lowButtons';\nimport SendPage from './sendPage';\nimport SignIn from './signInPage/signin';\nimport { ButtonPopRight } from '../buttons';\n\nfunction App({\n  loadTemplate,\n  newTempalte\n}) {\n  const [activeDic, setActiveDic] = useState({\n    activeSend: false,\n    activeMail: false\n  });\n  const [contract, setContract] = useState(true);\n  const [inputSaveButton, setinputSaveButton] = useSpring(() => ({\n    transform: \" rotateY(0deg) translate(0%,0%) scale(1)\"\n  }));\n  const [inputBox, setinputBox] = useSpring(() => ({\n    width: \"0%\"\n  }));\n  const {\n    push\n  } = useHistory();\n  const emailEditorRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const loadTheTemplate = data => {\n    emailEditorRef.current.editor.loadDesign(data);\n  };\n\n  console.log(\"working\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primaryWindow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ten\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter973\",\n    width: \"10.278\",\n    height: \"10.306\",\n    x: \"-0.139\",\n    y: \"-0.153\",\n    colorInterpolationFilters: \"sRGB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"rect\", {\n    style: {\n      mixBlendMode: \"normal\"\n    },\n    width: \"100%\",\n    height: \"100%\",\n    fill: \"#000\",\n    fillOpacity: \"0.214\",\n    filter: \"url(#filter973)\",\n    opacity: \"0.799\",\n    rx: \"50%\",\n    ry: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }))));\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  loadTempalteAct,\n  newTempalte\n})(App);","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/App.js"],"names":["React","useRef","useEffect","useState","useCallback","render","unmountComponentAtNode","HashRouter","Route","Switch","withRouter","useHistory","connect","EmailEditor","useSpring","animated","config","loadTempalteAct","newTempalte","TopNav","LowNav","FirstBody","MailEditor","LowButtons","SendPage","SignIn","ButtonPopRight","App","loadTemplate","activeDic","setActiveDic","activeSend","activeMail","contract","setContract","inputSaveButton","setinputSaveButton","transform","inputBox","setinputBox","width","push","emailEditorRef","inputRef","loadTheTemplate","data","current","editor","loadDesign","console","log","mixBlendMode","mapStateToProps","state"],"mappings":"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","sourcesContent":["\nimport React, { useRef, useEffect, useState,useCallback } from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport {HashRouter, Route, Switch, withRouter} from 'react-router-dom'\nimport {useHistory} from 'react-router-dom'\nimport {connect } from 'react-redux'\nimport EmailEditor from 'react-email-editor';\nimport {useSpring, animated, config } from 'react-spring'\n\nimport {loadTempalteAct,newTempalte} from '../actions'\nimport './App.css';\nimport TopNav from './topNav';\nimport LowNav from './lowNav';\nimport FirstBody from './firstBody';\nimport MailEditor from './mailEditor';\nimport LowButtons from './lowButtons';\nimport SendPage from './sendPage';\nimport SignIn from './signInPage/signin';\nimport {ButtonPopRight} from '../buttons';\n\nfunction App({loadTemplate,newTempalte}) {\n  const [activeDic, setActiveDic] = useState({activeSend:false, activeMail:false})\n  const [contract, setContract] = useState(true)\n  const [inputSaveButton, setinputSaveButton]=useSpring(() => ({transform:\" rotateY(0deg) translate(0%,0%) scale(1)\"}))\n  const [inputBox, setinputBox]=useSpring(() => ({width:\"0%\"}))\n  const {push} = useHistory()\n\n  const emailEditorRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const loadTheTemplate = (data) => {\n      emailEditorRef.current.editor.loadDesign(data)\n  }\n  console.log(\"working\")\n  return (\n        <div className=\"primaryWindow\">\n          <div className=\"ten\">\n              <svg\n                width=\"100%\"\n                height=\"100%\"\n              >\n                <defs>\n                    <filter\n                    id=\"filter973\"\n                    width=\"10.278\"\n                    height=\"10.306\"\n                    x=\"-0.139\"\n                    y=\"-0.153\"\n                    colorInterpolationFilters=\"sRGB\"\n                    >\n                    <feGaussianBlur stdDeviation=\"10\"></feGaussianBlur>\n                    </filter>\n                </defs>\n              <rect\n                style={{ mixBlendMode: \"normal\" }}\n                width=\"100%\"\n                height=\"100%\"\n                fill=\"#000\"\n                fillOpacity=\"0.214\"\n                filter=\"url(#filter973)\"\n                opacity=\"0.799\"\n                rx=\"50%\"\n                ry=\"50%\"\n            ></rect>\n            </svg>\n          </div>\n          {/* <div className=\"top\">\n                <TopNav activeDic={activeDic}></TopNav>\n              </div>\n              <div className=\"low\">\n                <LowNav></LowNav>\n              </div>\n          <div className=\"midBodies\">\n              <div className=\"MailEditor\">\n              </div>\n              <div className=\"midButtons\">\n                <Switch>\n                  <Route path=\"/mailEditor\" render={()=><div className=\"editorWindow\"><EmailEditor ref={emailEditorRef}></EmailEditor></div>}></Route>\n                  <Route path=\"/sendPage\" render={()=><SendPage handelDic={setActiveDic} loadTheTemplate={loadTheTemplate}></SendPage>}></Route>\n                  <Route exact path=\"/\" render={()=><FirstBody  handelDic={setActiveDic} ></FirstBody>}></Route>\n                </Switch>\n              </div>\n          </div>\n          <div className=\"mailEditorButtons\">\n              <LowButtons  setinputBox={setinputBox} activeDic={activeDic} handelDic={setActiveDic}></LowButtons>\n              <animated.div className=\"templateNameInput\" style={inputBox}>\n                <div className=\"Inputbox\">\n                    <input ref={inputRef} className=\"Input\" placeholder=\"New Template\"></input>\n                    <svg className=\"InputboxSVG\"\n                        viewBox=\"0 0 171.601 73.327\"\n                        height={277.143}\n                        width={648.571}\n\n                        >\n                        <defs>\n                            <path id=\"prefix__a\" d=\"M33.262 78.619h148.511v21.652H33.262z\" />\n                        </defs>\n                        <g transform=\"translate(-19.655 -100.542)\">\n                            <rect\n                            width={168.577}\n                            height={70.304}\n                            x={22.679}\n                            y={103.565}\n                            ry={8.137}\n                            fill=\"#989898\"\n                            fillOpacity={0.437}\n                            />\n                            <rect\n                            ry={8.137}\n                            y={100.542}\n                            x={19.655}\n                            height={70.304}\n                            width={168.577}\n                            fill=\"#fff\"\n                            />\n                            <rect\n                            width={92.982}\n                            height={20.411}\n                            x={85.137}\n                            y={125.485}\n                            ry={2.362}\n                            fill=\"#ff2723\"\n                            />\n                            <text\n                            transform=\"matrix(.46059 0 0 .4885 12.368 92.446)\"\n                            fontWeight={700}\n                            fontSize={14.111}\n                            fontFamily=\"Times New Roman\"\n                            fill=\"red\"\n                            >\n                            <tspan x={33.262} y={91.084}>\n                                <tspan>{\"Template Name\"}</tspan>\n                            </tspan>\n                            </text>\n                        </g>\n                    </svg>\n                    <animated.div className=\"InputSaveButton\"\n                        style={inputSaveButton}\n                        onMouseEnter={() => {\n                            setinputSaveButton({transform:\"rotateY(0deg) translate(0%,0%) scale(1.2)\"})\n                        }}\n                        onMouseLeave={() => {\n                            setinputSaveButton({transform:\"rotateY(0deg) translate(0%,0%) scale(1)\"})\n                        }}\n                        onClick={() => {\n                            emailEditorRef.current.editor.exportHtml(({design,html})=>{\n                              newTempalte({key:1, name:inputRef.current.value, data:design})\n                              setActiveDic({activeSend:true, activeMail:false})\n                              push(\"/sendPage\")\n                              setinputBox({width:\"0%\"})\n                              })\n                          }}\n                    >\n                        <svg  className=\"InputSaveButtonSVG\"\n                            viewBox=\"0 0 37.476 13.39\" height={50.609} width={141.642}>\n                            <defs>\n                                <path id=\"prefix__a\" d=\"M33.262 78.619H67.28V99.03H33.262z\" />\n                            </defs>\n                            <g transform=\"translate(-129.429 -176.245)\">\n                                <rect\n                                width={35.868}\n                                height={12.372}\n                                x={131.037}\n                                y={177.264}\n                                ry={2.683}\n                                fillOpacity={0.319}\n                                />\n                                <rect\n                                ry={2.683}\n                                y={176.245}\n                                x={129.429}\n                                height={12.372}\n                                width={35.868}\n                                fill=\"#ff2723\"\n                                />\n                                <text\n                                transform=\"matrix(.43155 0 0 .43155 128.54 145.384)\"\n                                fontWeight={700}\n                                fontSize={14.111}\n                                fontFamily=\"Times New Roman\"\n                                fill=\"#fff\"\n                                >\n                                <tspan x={33.262} y={91.084}>\n                                    <tspan>{\"Save\"}</tspan>\n                                </tspan>\n                                </text>\n                                <path\n                                d=\"M137.034 180.145a.554.554 0 00-.555.556v4.235c0 .308.248.555.555.555h4.261a.554.554 0 00.556-.555v-3.233a1.133 1.133 0 00-.105-.302l-1.149-1.158-.035-.022a1.175 1.175 0 00-.155-.076zm.389.76h2.698c.093 0 .167.1.167.225v1.096c0 .125-.074.225-.167.225h-2.698c-.093 0-.168-.1-.168-.225v-1.096c0-.124.075-.225.168-.225zm1.731 2.306a.773.76 0 01.004 0 .773.76 0 01.773.76.773.76 0 01-.773.76.773.76 0 01-.773-.76.773.76 0 01.769-.76z\"\n                                fill=\"#fff\"\n                                />\n                            </g>\n                            </svg>\n                    </animated.div>\n                </div>\n              </animated.div>\n          </div> */}\n        </div>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return state\n}\nexport default connect(mapStateToProps,{loadTempalteAct,newTempalte})(App);\n"]},"metadata":{},"sourceType":"module"}