{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\src\\\\components\\\\Dashboard\\\\newCampaign\\\\loadedCampaign.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport './newcam.css';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Route, Switch } from 'react-router-dom';\nimport EmailEditor from 'react-email-editor';\nimport store from '../../../store/store';\nimport LoadedCampForm from './loadedCampForm';\n\nconst LoadedCamp = () => {\n  const initialState = {\n    senderName: \"\",\n    //string\n    senderEmail: \"\",\n    //string\n    campName: \"\",\n    //string\n    emailSub: \"\",\n    //string\n    emailListCVS: null,\n    //file\n    emailBodyJSON: null,\n    //JSONobject\n    emailBodyHTML: null //HTMLobject \n\n  };\n  const [newCampaignData, setNewCampaignData] = useState(initialState);\n  useEffect(() => {\n    const loadedCamp = store.getState().loadedCamp ? store.getState().loadedCamp.campId : null;\n    loadedCamp ? setNewCampaignData(store.getstate().campaigns.filter(camp => camp.id === loadedCamp)) : console.log(\"notWorking\");\n  }, []);\n  const {\n    push\n  } = useHistory(null);\n  const emailEditorRef = useRef(null);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard/loadedcamp/maileditor\",\n    render: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topNavCam  subWrapperCam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createCamp   topButtonsCam subWrapperCam\",\n      onClick: () => push(\"/dashboard/loadedcamp\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addEmailList topButtonsCam subWrapperCam\",\n      onClick: () => emailEditorRef.current.editor.exportHtml(({\n        design,\n        html\n      }) => {\n        setNewCampaignData({ ...newCampaignData,\n          emailBodyJSON: design,\n          emailBodyHTML: html\n        });\n        push(\"/dashboard/loadedcamp\");\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Save & Next\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashBodyMain  subWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(EmailEditor, {\n      ref: emailEditorRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard/loadedcamp\",\n    render: () => /*#__PURE__*/React.createElement(LoadedCampForm, {\n      newCampaignData: newCampaignData,\n      setNewCampaignData: setNewCampaignData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default LoadedCamp;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/newCampaign/loadedCampaign.js"],"names":["React","useState","useRef","useEffect","useFormik","useHistory","Route","Switch","EmailEditor","store","LoadedCampForm","LoadedCamp","initialState","senderName","senderEmail","campName","emailSub","emailListCVS","emailBodyJSON","emailBodyHTML","newCampaignData","setNewCampaignData","loadedCamp","getState","campId","getstate","campaigns","filter","camp","id","console","log","push","emailEditorRef","current","editor","exportHtml","design","html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,UAAU,EAAE,EADK;AACF;AACfC,IAAAA,WAAW,EAAE,EAFI;AAED;AAChBC,IAAAA,QAAQ,EAAE,EAHO;AAGJ;AACbC,IAAAA,QAAQ,EAAE,EAJO;AAIJ;AACbC,IAAAA,YAAY,EAAE,IALG;AAKE;AACnBC,IAAAA,aAAa,EAAE,IANE;AAMG;AACpBC,IAAAA,aAAa,EAAE,IAPE,CAOG;;AAPH,GAArB;AASA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAACW,YAAD,CAAtD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,UAAU,GAAGb,KAAK,CAACc,QAAN,GAAiBD,UAAjB,GAA8Bb,KAAK,CAACc,QAAN,GAAiBD,UAAjB,CAA4BE,MAA1D,GAAmE,IAAtF;AACAF,IAAAA,UAAU,GAAGD,kBAAkB,CAACZ,KAAK,CAACgB,QAAN,GAAiBC,SAAjB,CAA2BC,MAA3B,CAAkCC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,UAAtD,CAAD,CAArB,GAA2FQ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAArG;AAEH,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAW3B,UAAU,CAAC,IAAD,CAA3B;AACA,QAAM4B,cAAc,GAAG/B,MAAM,CAAC,IAAD,CAA7B;AAEA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,kCAAZ;AAA+C,IAAA,MAAM,EAAE,mBACnD,uDACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,0CAAf;AACI,MAAA,OAAO,EAAE,MAAM8B,IAAI,CAAC,uBAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,MAAA,SAAS,EAAC,0CAAf;AACI,MAAA,OAAO,EAAE,MACLC,cAAc,CAACC,OAAf,CAAuBC,MAAvB,CAA8BC,UAA9B,CAAyC,CAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAD,KAAsB;AAC3DjB,QAAAA,kBAAkB,CAAC,EAAE,GAAGD,eAAL;AAAsBF,UAAAA,aAAa,EAAEmB,MAArC;AAA6ClB,UAAAA,aAAa,EAAEmB;AAA5D,SAAD,CAAlB;AAEAN,QAAAA,IAAI,CAAC,uBAAD,CAAJ;AACH,OAJD,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,CADJ,eAsBI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAtBJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eA+BI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,uBAAZ;AAAoC,IAAA,MAAM,EAAE,mBACxC,oBAAC,cAAD;AAAgB,MAAA,eAAe,EAAEb,eAAjC;AACI,MAAA,kBAAkB,EAAEC,kBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADJ;AAuCH,CA7DD;;AA+DA,eAAeV,UAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport store from '../../../store/store'\r\n\r\nimport LoadedCampForm from './loadedCampForm'\r\n\r\nconst LoadedCamp = () => {\r\n\r\n    const initialState = {\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: null,//file\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    }\r\n    const [newCampaignData, setNewCampaignData] = useState(initialState)\r\n\r\n    useEffect(() => {\r\n        const loadedCamp = store.getState().loadedCamp ? store.getState().loadedCamp.campId : null\r\n        loadedCamp ? setNewCampaignData(store.getstate().campaigns.filter(camp => camp.id === loadedCamp)) : console.log(\"notWorking\")\r\n\r\n    }, [])\r\n\r\n    const { push } = useHistory(null)\r\n    const emailEditorRef = useRef(null);\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/loadedcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/loadedcamp\")}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div className=\"addEmailList topButtonsCam subWrapperCam\"\r\n                            onClick={() =>\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n\r\n                                    push(\"/dashboard/loadedcamp\")\r\n                                })\r\n\r\n                            }\r\n\r\n                        >\r\n                            Save & Next\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/loadedcamp\" render={() =>\r\n                <LoadedCampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                ></LoadedCampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default LoadedCamp;"]},"metadata":{},"sourceType":"module"}