{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\src\\\\buttons\\\\index.js\";\nimport React, { forwardRef } from 'react';\nimport 'react-dom';\nimport './buttons.css';\nimport { useSpring, config, animated } from 'react-spring';\nexport const ButtonPopRightLite = forwardRef(({\n  breath,\n  grow,\n  children,\n  expand,\n  title\n}, ref) => {\n  const [round, setRound] = useSpring(() => ({\n    round1: \"50%\",\n    round2: \"50%\",\n    widthfont: \"90%\",\n    xfront: \"5%\"\n  }));\n  const [rest, setRest] = useSpring(() => ({\n    widthfont: \"90%\",\n    xfront: \"5%\"\n  }));\n  const [pusher, setPusher] = useSpring(() => ({\n    width: `${breath}%`,\n    height: \"100%\"\n  }));\n  const [textDes, setTextDes] = useSpring(() => ({\n    flexGrow: 0,\n    opacity: 0\n  }));\n\n  const pop = () => {\n    setRest({\n      widthfont: \"100%\",\n      xfront: \"0%\"\n    });\n    setRound({\n      round1: \"10%\",\n      config: {\n        duration: 90\n      }\n    });\n    setPusher({\n      width: `${breath * grow}%`\n    });\n    setTextDes({\n      flexGrow: grow - 1,\n      opacity: 1\n    });\n  };\n\n  const shrink = () => {\n    setRest({\n      widthfont: \"90%\",\n      xfront: \"5%\"\n    });\n    setRound({\n      round1: \"50%\",\n      config: {\n        duration: 800\n      }\n    });\n    setPusher({\n      width: `${breath}%`\n    });\n    setTextDes({\n      flexGrow: 0,\n      opacity: 0\n    });\n  };\n\n  expand ? pop() : shrink();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"liteWrapper\",\n    style: pusher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"ten\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    className: \"tenSVG\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter973\",\n    width: \"10.278\",\n    height: \"10.306\",\n    x: \"-0.139\",\n    y: \"-0.153\",\n    colorInterpolationFilters: \"sRGB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(animated.rect, {\n    className: \"back\",\n    style: {\n      mixBlendMode: \"normal\"\n    },\n    width: \"100%\",\n    height: \"100%\",\n    fill: \"#000\",\n    fillOpacity: \"0.214\",\n    filter: \"url(#filter973)\",\n    opacity: \"0.6\",\n    rx: round.round1,\n    ry: round.round2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(animated.rect, {\n    className: \"font\",\n    x: rest.xfront,\n    y: \"5%\",\n    width: rest.widthfont,\n    height: \"90%\",\n    fill: \"#fff\",\n    rx: round.round1,\n    ry: round.round2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svgHolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, children), /*#__PURE__*/React.createElement(animated.div, {\n    className: \"textHolder\",\n    style: textDes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, title)), /*#__PURE__*/React.createElement(animated.div, {\n    className: \"eventDetector2\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })));\n}); // export const ButtonPopRight = forwardRef(({ grow, contract, children }, ref) => {\n//     const [textWidth, setTextWidth] = useSpring(() => ({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` }))\n//     const [tranformWidth, setTranformWidth] = useSpring(() => ({ width: \"12.131\" }))\n//     const [tranformBackWidth, setTranformBackWidth] = useSpring(() => ({ width: \"13.173\" }))\n//     const [tranformX, setTranformX] = useSpring(() => ({ x: \"56.383\" }))\n//     const [tranformBackX, setTranformBackX] = useSpring(() => ({ x: \"55.877\" }))\n//     const [tranformWrapper, setTranformWrapper] = useSpring(() => ({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }))\n//     const [tranformSVG, setTranformSVG] = useSpring(() => ({ width: \"100%\", height: \"100%\" }))\n//     const shrink = () => {\n//         setTranformX({ x: \"56.383\", delay: 50 })\n//         setTranformBackX({ x: \"55.877\", delay: 50 })\n//         setTranformWidth({ width: \"12.131\" })\n//         setTranformBackWidth({ width: \"13.173\" })\n//         setTranformSVG({ width: \"100%\", height: \"100%\", delay: 50 })\n//         setTranformWrapper({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min, delay: 300 })\n//         setTextWidth({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` })\n//     }\n//     const expand = () => {\n//         setTranformX({ x: `${grow.transRect}`, delay: 30 })\n//         setTranformBackX({ x: `${grow.transRect}`, delay: 30 })\n//         setTranformWidth({ width: `${grow.front}`, delay: 30 })\n//         setTranformBackWidth({ width: `${grow.front}`, delay: 30 })\n//         setTranformSVG({ width: `${grow.SVG}%  `, height: \"100%\" })\n//         setTranformWrapper({ width: `${grow.grow}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min })\n//         setTextWidth({ width: `${grow.textWidth}vw`, opacity: 1, fontSize: `${grow.fontSize}vw`, delay: 200 })\n//     }\n//     contract ? shrink() : expand()\n//     try {\n//         return (\n//             <animated.div className=\"buttonWrapper\" style={tranformWrapper}>\n//                 <animated.svg\n//                     className=\"buttonSVG\"\n//                     xmlns=\"http://www.w3.org/2000/svg\"\n//                     width={tranformSVG.width}\n//                     height={tranformSVG.height}\n//                     version=\"1.1\"\n//                     viewBox=\"0 0 16.835 15.632\"\n//                 >\n//                     <defs>\n//                         <filter\n//                             id=\"filter973\"\n//                             width=\"1.278\"\n//                             height=\"1.306\"\n//                             x=\"-0.139\"\n//                             y=\"-0.153\"\n//                             colorInterpolationFilters=\"sRGB\"\n//                         >\n//                             <feGaussianBlur stdDeviation=\"0.763\"></feGaussianBlur>\n//                         </filter>\n//                     </defs>\n//                     <g\n//                         fillOpacity=\"1\"\n//                         strokeWidth=\"0.008\"\n//                         transform=\"translate(-54.046 -143.913)\"\n//                     >\n//                         <animated.rect\n//                             style={{ mixBlendMode: \"normal\" }}\n//                             width={tranformBackWidth.width}\n//                             height=\"11.97\"\n//                             x={tranformBackX.x}\n//                             y=\"145.744\"\n//                             fill=\"#000\"\n//                             fillOpacity=\"0.214\"\n//                             filter=\"url(#filter973)\"\n//                             opacity=\"0.799\"\n//                             rx=\"5.476\"\n//                             ry=\"5.985\"\n//                         ></animated.rect>\n//                         <animated.rect\n//                             width={tranformWidth.width}\n//                             height=\"11.331\"\n//                             x={tranformX.x}\n//                             y=\"146.041\"\n//                             fill=\"#fff\"\n//                             rx=\"6.065\"\n//                             ry=\"5.666\"\n//                         ></animated.rect>\n//                     </g>\n//                 </animated.svg>\n//                 <div style={{ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }} className=\"SVGcontainer\">\n//                     <animated.div style={textWidth} className=\"Text\">{grow.text}</animated.div>\n//                     {children}\n//                 </div>\n//                 <div className=\"eventDetector\" ref={ref}></div>\n//             </animated.div>\n//         );\n//     } catch {\n//         return (\n//             console.log(\"A Button should look like this and also have the same attributes <ButtonPopRight ontract={contract} grow={{radius:4, SVG:6, front:20, transRect:52,textWidth:4,fontSize:1, text:\\\"lets See\\\"}}><div className=\\\"child\\\"></div></ButtonPopRight>\")\n//         )\n//     }\n// });","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/buttons/index.js"],"names":["React","forwardRef","useSpring","config","animated","ButtonPopRightLite","breath","grow","children","expand","title","ref","round","setRound","round1","round2","widthfont","xfront","rest","setRest","pusher","setPusher","width","height","textDes","setTextDes","flexGrow","opacity","pop","duration","shrink","mixBlendMode"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport { } from 'react-dom';\r\nimport './buttons.css'\r\nimport { useSpring, config, animated } from 'react-spring'\r\n\r\nexport const ButtonPopRightLite = forwardRef(({ breath, grow, children, expand, title }, ref) => {\r\n    const [round, setRound] = useSpring(() => ({ round1: \"50%\", round2: \"50%\", widthfont: \"90%\", xfront: \"5%\" }))\r\n    const [rest, setRest] = useSpring(() => ({ widthfont: \"90%\", xfront: \"5%\" }))\r\n    const [pusher, setPusher] = useSpring(() => ({ width: `${breath}%`, height: \"100%\" }))\r\n    const [textDes, setTextDes] = useSpring(() => ({ flexGrow: 0, opacity: 0 }))\r\n\r\n\r\n    const pop = () => {\r\n\r\n        setRest({ widthfont: \"100%\", xfront: \"0%\" })\r\n        setRound({ round1: \"10%\", config: { duration: 90 } })\r\n        setPusher({ width: `${breath * grow}%` })\r\n        setTextDes({ flexGrow: grow - 1, opacity: 1 })\r\n    }\r\n\r\n    const shrink = () => {\r\n\r\n        setRest({ widthfont: \"90%\", xfront: \"5%\" })\r\n        setRound({ round1: \"50%\", config: { duration: 800 } })\r\n        setPusher({ width: `${breath}%` })\r\n        setTextDes({ flexGrow: 0, opacity: 0 })\r\n    }\r\n\r\n    expand ? pop() : shrink()\r\n    return (\r\n        <>\r\n            <animated.div className=\"liteWrapper\" style={pusher}>\r\n\r\n                <animated.div className=\"ten\" style={{ width: \"100%\", height: \"100%\" }}>\r\n\r\n                    <svg\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        className=\"tenSVG\"\r\n                    >\r\n                        <defs>\r\n                            <filter\r\n                                id=\"filter973\"\r\n                                width=\"10.278\"\r\n                                height=\"10.306\"\r\n                                x=\"-0.139\"\r\n                                y=\"-0.153\"\r\n                                colorInterpolationFilters=\"sRGB\"\r\n                            >\r\n                                <feGaussianBlur stdDeviation=\"10\"></feGaussianBlur>\r\n                            </filter>\r\n                        </defs>\r\n                        <animated.rect className=\"back\"\r\n                            style={{ mixBlendMode: \"normal\" }}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            fill=\"#000\"\r\n                            fillOpacity=\"0.214\"\r\n                            filter=\"url(#filter973)\"\r\n                            opacity=\"0.6\"\r\n                            rx={round.round1}\r\n                            ry={round.round2}\r\n                        ></animated.rect>\r\n                        <animated.rect className=\"font\"\r\n                            x={rest.xfront}\r\n                            y=\"5%\"\r\n                            width={rest.widthfont}\r\n                            height=\"90%\"\r\n                            fill=\"#fff\"\r\n                            rx={round.round1}\r\n                            ry={round.round2}\r\n                        ></animated.rect>\r\n\r\n                    </svg>\r\n\r\n                </animated.div>\r\n                <div className=\"infoWrapper\">\r\n                    <div className=\"svgHolder\">\r\n                        {children}\r\n                    </div>\r\n                    <animated.div className=\"textHolder\" style={textDes}>\r\n                        {title}\r\n                    </animated.div>\r\n                </div>\r\n                <animated.div className=\"eventDetector2\" ref={ref}></animated.div>\r\n            </animated.div>\r\n        </>\r\n\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const ButtonPopRight = forwardRef(({ grow, contract, children }, ref) => {\r\n//     const [textWidth, setTextWidth] = useSpring(() => ({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` }))\r\n//     const [tranformWidth, setTranformWidth] = useSpring(() => ({ width: \"12.131\" }))\r\n//     const [tranformBackWidth, setTranformBackWidth] = useSpring(() => ({ width: \"13.173\" }))\r\n//     const [tranformX, setTranformX] = useSpring(() => ({ x: \"56.383\" }))\r\n//     const [tranformBackX, setTranformBackX] = useSpring(() => ({ x: \"55.877\" }))\r\n//     const [tranformWrapper, setTranformWrapper] = useSpring(() => ({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }))\r\n//     const [tranformSVG, setTranformSVG] = useSpring(() => ({ width: \"100%\", height: \"100%\" }))\r\n\r\n//     const shrink = () => {\r\n//         setTranformX({ x: \"56.383\", delay: 50 })\r\n//         setTranformBackX({ x: \"55.877\", delay: 50 })\r\n//         setTranformWidth({ width: \"12.131\" })\r\n//         setTranformBackWidth({ width: \"13.173\" })\r\n//         setTranformSVG({ width: \"100%\", height: \"100%\", delay: 50 })\r\n//         setTranformWrapper({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min, delay: 300 })\r\n//         setTextWidth({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` })\r\n//     }\r\n\r\n//     const expand = () => {\r\n//         setTranformX({ x: `${grow.transRect}`, delay: 30 })\r\n//         setTranformBackX({ x: `${grow.transRect}`, delay: 30 })\r\n//         setTranformWidth({ width: `${grow.front}`, delay: 30 })\r\n//         setTranformBackWidth({ width: `${grow.front}`, delay: 30 })\r\n//         setTranformSVG({ width: `${grow.SVG}%  `, height: \"100%\" })\r\n//         setTranformWrapper({ width: `${grow.grow}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min })\r\n//         setTextWidth({ width: `${grow.textWidth}vw`, opacity: 1, fontSize: `${grow.fontSize}vw`, delay: 200 })\r\n//     }\r\n\r\n//     contract ? shrink() : expand()\r\n//     try {\r\n//         return (\r\n//             <animated.div className=\"buttonWrapper\" style={tranformWrapper}>\r\n//                 <animated.svg\r\n//                     className=\"buttonSVG\"\r\n//                     xmlns=\"http://www.w3.org/2000/svg\"\r\n//                     width={tranformSVG.width}\r\n//                     height={tranformSVG.height}\r\n\r\n//                     version=\"1.1\"\r\n//                     viewBox=\"0 0 16.835 15.632\"\r\n//                 >\r\n//                     <defs>\r\n//                         <filter\r\n//                             id=\"filter973\"\r\n//                             width=\"1.278\"\r\n//                             height=\"1.306\"\r\n//                             x=\"-0.139\"\r\n//                             y=\"-0.153\"\r\n//                             colorInterpolationFilters=\"sRGB\"\r\n//                         >\r\n//                             <feGaussianBlur stdDeviation=\"0.763\"></feGaussianBlur>\r\n//                         </filter>\r\n//                     </defs>\r\n//                     <g\r\n//                         fillOpacity=\"1\"\r\n//                         strokeWidth=\"0.008\"\r\n//                         transform=\"translate(-54.046 -143.913)\"\r\n//                     >\r\n//                         <animated.rect\r\n//                             style={{ mixBlendMode: \"normal\" }}\r\n//                             width={tranformBackWidth.width}\r\n//                             height=\"11.97\"\r\n//                             x={tranformBackX.x}\r\n//                             y=\"145.744\"\r\n//                             fill=\"#000\"\r\n//                             fillOpacity=\"0.214\"\r\n//                             filter=\"url(#filter973)\"\r\n//                             opacity=\"0.799\"\r\n//                             rx=\"5.476\"\r\n//                             ry=\"5.985\"\r\n//                         ></animated.rect>\r\n//                         <animated.rect\r\n//                             width={tranformWidth.width}\r\n//                             height=\"11.331\"\r\n//                             x={tranformX.x}\r\n//                             y=\"146.041\"\r\n//                             fill=\"#fff\"\r\n//                             rx=\"6.065\"\r\n//                             ry=\"5.666\"\r\n//                         ></animated.rect>\r\n//                     </g>\r\n//                 </animated.svg>\r\n//                 <div style={{ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }} className=\"SVGcontainer\">\r\n//                     <animated.div style={textWidth} className=\"Text\">{grow.text}</animated.div>\r\n//                     {children}\r\n//                 </div>\r\n//                 <div className=\"eventDetector\" ref={ref}></div>\r\n//             </animated.div>\r\n\r\n//         );\r\n//     } catch {\r\n//         return (\r\n//             console.log(\"A Button should look like this and also have the same attributes <ButtonPopRight ontract={contract} grow={{radius:4, SVG:6, front:20, transRect:52,textWidth:4,fontSize:1, text:\\\"lets See\\\"}}><div className=\\\"child\\\"></div></ButtonPopRight>\")\r\n//         )\r\n//     }\r\n// });\r\n\r\n"]},"metadata":{},"sourceType":"module"}