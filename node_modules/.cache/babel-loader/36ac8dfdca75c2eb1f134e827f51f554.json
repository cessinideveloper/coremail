{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\src\\\\components\\\\Dashboard\\\\newCampaign\\\\newCam.js\";\nimport React from 'react';\nimport './newcam.css';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport CampForm from './campaignForm';\n\nconst NewCam = () => {\n  const [newCampaignData, setNewCampaignData] = useState({\n    senderName: \"\",\n    //string\n    senderEmail: \"\",\n    //string\n    campName: \"\",\n    //string\n    emailSub: \"\",\n    //string\n    emailListCVS: null,\n    //file\n    emailBodyJSON: null,\n    //JSONobject\n    emailBodyHTML: null //HTMLobject \n\n  });\n  const {\n    push\n  } = useHistory(null);\n  return /*#__PURE__*/React.createElement(CampForm, {\n    newCampaignData: newCampaignData,\n    setNewCampaignData: setNewCampaignData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) // <>\n  //     <div className=\"topNavCam  subWrapperCam\">\n  //         <div className=\"createCamp   topButtonsCam subWrapperCam\">\n  //             <p>Back</p>\n  //         </div>\n  //         <div className=\"addEmailList topButtonsCam subWrapperCam\">\n  //             <p>Save & Next</p>\n  //         </div>\n  //     </div>\n  //     <div className=\"dashBodyMainCam  subWrapperCam\">\n  //         <div className=\"camFormHolder\">\n  //             <form className=\"formFields  Fields\">\n  //                 <div className=\"leftFields Fields\">\n  //                     <div className=\"subField Fields\">\n  //                         <label htmlFor=\"camName\">Campaign Name</label>\n  //                         <input type=\"text\" id=\"camName\" name=\"camName\"\n  //                         onChange={e => setNewCampaignData({...newCampaignData, campName:e.target.value})}\n  //                         />\n  //                     </div>\n  //                     <div className=\"subField Fields\">\n  //                         <label htmlFor=\"SenderName\">Sender Name</label>\n  //                         <input type=\"text\" id=\"SenderName\" name=\"SenderName\"\n  //                         onChange={e => setNewCampaignData({...newCampaignData, senderName:e.target.value})}\n  //                         />\n  //                     </div>\n  //                     <div className=\"subField Fields\">\n  //                         <label htmlFor=\"emailSub\">Email Subject</label>\n  //                         <input type=\"text\" id=\"emailSub\" name=\"camName\"\n  //                         onChange={e => setNewCampaignData({...newCampaignData, emailSub:e.target.value})}\n  //                         />\n  //                     </div>\n  //                 </div>\n  //                 <div className=\"rightFields Fields\">\n  //                     <div className=\"subField Fields\">\n  //                         <label htmlFor=\"SenderEmail\">Sender Email</label>\n  //                         <input type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\n  //                         onChange={e => setNewCampaignData({...newCampaignData, senderEmail:e.target.value})}\n  //                         />\n  //                     </div>\n  //                     <div className=\"subFieldLong Fields\">\n  //                         <label htmlFor=\"emailList\">Email List</label>\n  //                         {/* <select id=\"camName\" name=\"camName\">\n  //                             <option value=\"NoEmailList\">Please Create Email List</option>\n  //                         </select> */}\n  //                         <input type=\"file\" id=\"emailList\"\n  //                         onChange={e => setNewCampaignData({...newCampaignData, emailListCVS:e.target.files[0]})}\n  //                         />\n  //                     </div>\n  //                     <div className=\"subFieldLong Fields\">\n  //                         <label htmlFor=\"emailBody\">Email Body</label>\n  //                         {/* <select id=\"camName\" name=\"camName\">\n  //                             <option value=\"NoEmailList\">Please Create Email List</option>\n  //                         </select> */}\n  //                         <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\n  //                             onClick={() => push(\"/dashboard/maileditor\")}\n  //                         >\n  //                             Deisgn Body\n  //                         </div>\n  //                     </div>\n  //                 </div>\n  //             </form>\n  //             <div className=\"formButtons Fields\">\n  //                 <div className=\"sendButton Fields formButtonsCam\"\n  //                 // onClick={e => console.log(newCampaignData)}\n  //                 >\n  //                     Save & Send\n  //                 </div>\n  //                 <div className=\"createButton Fields formButtonsCam\">\n  //                     Save & Exit\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  // </>\n  ;\n};\n\nexport default NewCam;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/newCampaign/newCam.js"],"names":["React","useFormik","useHistory","CampForm","NewCam","newCampaignData","setNewCampaignData","useState","senderName","senderEmail","campName","emailSub","emailListCVS","emailBodyJSON","emailBodyHTML","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCC,QAAQ,CAAC;AACnDC,IAAAA,UAAU,EAAE,EADuC;AACpC;AACfC,IAAAA,WAAW,EAAE,EAFsC;AAEnC;AAChBC,IAAAA,QAAQ,EAAE,EAHyC;AAGtC;AACbC,IAAAA,QAAQ,EAAE,EAJyC;AAItC;AACbC,IAAAA,YAAY,EAAE,IALqC;AAKhC;AACnBC,IAAAA,aAAa,EAAE,IANoC;AAM/B;AACpBC,IAAAA,aAAa,EAAE,IAPoC,CAO/B;;AAP+B,GAAD,CAAtD;AAUA,QAAM;AAAEC,IAAAA;AAAF,MAAWb,UAAU,CAAC,IAAD,CAA3B;AACA,sBACI,oBAAC,QAAD;AAAU,IAAA,eAAe,EAAEG,eAA3B;AACI,IAAA,kBAAkB,EAAEC,kBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAII;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EJ;AAgFH,CA5FD;;AA8FA,eAAeF,MAAf","sourcesContent":["import React from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport CampForm from './campaignForm'\r\n\r\nconst NewCam = () => {\r\n    const [newCampaignData, setNewCampaignData] = useState({\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: null,//file\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    })\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <CampForm newCampaignData={newCampaignData}\r\n            setNewCampaignData={setNewCampaignData}\r\n        ></CampForm>\r\n        // <>\r\n        //     <div className=\"topNavCam  subWrapperCam\">\r\n        //         <div className=\"createCamp   topButtonsCam subWrapperCam\">\r\n        //             <p>Back</p>\r\n        //         </div>\r\n        //         <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n        //             <p>Save & Next</p>\r\n        //         </div>\r\n\r\n        //     </div>\r\n        //     <div className=\"dashBodyMainCam  subWrapperCam\">\r\n        //         <div className=\"camFormHolder\">\r\n        //             <form className=\"formFields  Fields\">\r\n        //                 <div className=\"leftFields Fields\">\r\n        //                     <div className=\"subField Fields\">\r\n        //                         <label htmlFor=\"camName\">Campaign Name</label>\r\n        //                         <input type=\"text\" id=\"camName\" name=\"camName\"\r\n        //                         onChange={e => setNewCampaignData({...newCampaignData, campName:e.target.value})}\r\n        //                         />\r\n        //                     </div>\r\n        //                     <div className=\"subField Fields\">\r\n        //                         <label htmlFor=\"SenderName\">Sender Name</label>\r\n        //                         <input type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n        //                         onChange={e => setNewCampaignData({...newCampaignData, senderName:e.target.value})}\r\n        //                         />\r\n        //                     </div>\r\n        //                     <div className=\"subField Fields\">\r\n        //                         <label htmlFor=\"emailSub\">Email Subject</label>\r\n        //                         <input type=\"text\" id=\"emailSub\" name=\"camName\"\r\n        //                         onChange={e => setNewCampaignData({...newCampaignData, emailSub:e.target.value})}\r\n        //                         />\r\n        //                     </div>\r\n        //                 </div>\r\n        //                 <div className=\"rightFields Fields\">\r\n        //                     <div className=\"subField Fields\">\r\n        //                         <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n        //                         <input type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n        //                         onChange={e => setNewCampaignData({...newCampaignData, senderEmail:e.target.value})}\r\n        //                         />\r\n        //                     </div>\r\n        //                     <div className=\"subFieldLong Fields\">\r\n        //                         <label htmlFor=\"emailList\">Email List</label>\r\n        //                         {/* <select id=\"camName\" name=\"camName\">\r\n        //                             <option value=\"NoEmailList\">Please Create Email List</option>\r\n        //                         </select> */}\r\n        //                         <input type=\"file\" id=\"emailList\"\r\n        //                         onChange={e => setNewCampaignData({...newCampaignData, emailListCVS:e.target.files[0]})}\r\n        //                         />\r\n        //                     </div>\r\n        //                     <div className=\"subFieldLong Fields\">\r\n        //                         <label htmlFor=\"emailBody\">Email Body</label>\r\n        //                         {/* <select id=\"camName\" name=\"camName\">\r\n        //                             <option value=\"NoEmailList\">Please Create Email List</option>\r\n        //                         </select> */}\r\n        //                         <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n        //                             onClick={() => push(\"/dashboard/maileditor\")}\r\n        //                         >\r\n        //                             Deisgn Body\r\n        //                         </div>\r\n        //                     </div>\r\n        //                 </div>\r\n        //             </form>\r\n        //             <div className=\"formButtons Fields\">\r\n        //                 <div className=\"sendButton Fields formButtonsCam\"\r\n        //                 // onClick={e => console.log(newCampaignData)}\r\n        //                 >\r\n        //                     Save & Send\r\n        //                 </div>\r\n        //                 <div className=\"createButton Fields formButtonsCam\">\r\n        //                     Save & Exit\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </>\r\n    );\r\n}\r\n\r\nexport default NewCam;"]},"metadata":{},"sourceType":"module"}