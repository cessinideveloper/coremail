{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import'./newcam.css';import{useFormik}from'formik';import{useHistory}from'react-router-dom';import{Route,Switch}from'react-router-dom';import EmailEditor from'react-email-editor';import store from'../../../../store/store';import LoadedCampForm from'./loadedCampForm';var LoadedCamp=function LoadedCamp(){var initialState={senderName:\"\",//string\nsenderEmail:\"\",//string\ncampName:\"\",//string\nemailSub:\"\",//string\nemailListCVS:null,//file\nemailBodyJSON:null,//JSONobject\nemailBodyHTML:null//HTMLobject \n};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),newCampaignData=_useState2[0],setNewCampaignData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),loadFunc=_useState4[0],setloadFunc=_useState4[1];var _useHistory=useHistory(null),push=_useHistory.push;var emailEditorRef=useRef(null);var loadTheTemplate=function loadTheTemplate(data){emailEditorRef.current.editor.loadDesign(data);};// useEffect(() => {\n//     console.log(emailEditorRef.current.editor)\n// })\nreturn/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/dashboard/loadedcamp/maileditor\",render:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"topNavCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"createCamp   topButtonsCam subWrapperCam\",onClick:function onClick(){return push(\"/dashboard/loadedcamp\");}},\"Back\"),/*#__PURE__*/React.createElement(\"div\",{className:\"addEmailList topButtonsCam subWrapperCam\",onClick:function onClick(){console.log(emailEditorRef.current);emailEditorRef.current.editor.exportHtml(function(_ref){var design=_ref.design,html=_ref.html;setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{emailBodyJSON:design,emailBodyHTML:html}));push(\"/dashboard/loadedcamp\");});}},\"Save & Next\")),/*#__PURE__*/React.createElement(\"div\",{className:\"dashBodyMain  subWrapper\"},/*#__PURE__*/React.createElement(EmailEditor,{ref:emailEditorRef})));}}),/*#__PURE__*/React.createElement(Route,{path:\"/dashboard/loadedcamp\",render:function render(){return/*#__PURE__*/React.createElement(LoadedCampForm,{newCampaignData:newCampaignData,setNewCampaignData:setNewCampaignData,loadTheTemplate:loadTheTemplate});}}));};export default LoadedCamp;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/campaignHolder/newCampaign/loadedCampaign.js"],"names":["React","useState","useRef","useEffect","useFormik","useHistory","Route","Switch","EmailEditor","store","LoadedCampForm","LoadedCamp","initialState","senderName","senderEmail","campName","emailSub","emailListCVS","emailBodyJSON","emailBodyHTML","newCampaignData","setNewCampaignData","loadFunc","setloadFunc","push","emailEditorRef","loadTheTemplate","data","current","editor","loadDesign","console","log","exportHtml","design","html"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,MAAO,cAAP,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErB,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAE,EADK,CACF;AACfC,WAAW,CAAE,EAFI,CAED;AAChBC,QAAQ,CAAE,EAHO,CAGJ;AACbC,QAAQ,CAAE,EAJO,CAIJ;AACbC,YAAY,CAAE,IALG,CAKE;AACnBC,aAAa,CAAE,IANE,CAMG;AACpBC,aAAa,CAAE,IAAK;AAPH,CAArB,CAFqB,cAWyBlB,QAAQ,CAACW,YAAD,CAXjC,wCAWdQ,eAXc,eAWGC,kBAXH,8BAYWpB,QAAQ,CAAC,IAAD,CAZnB,yCAYdqB,QAZc,eAYJC,WAZI,+BAeJlB,UAAU,CAAC,IAAD,CAfN,CAebmB,IAfa,aAebA,IAfa,CAiBrB,GAAMC,CAAAA,cAAc,CAAGvB,MAAM,CAAC,IAAD,CAA7B,CAIA,GAAMwB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,CAC9BF,cAAc,CAACG,OAAf,CAAuBC,MAAvB,CAA8BC,UAA9B,CAAyCH,IAAzC,EACH,CAFD,CAIA;AACA;AACA;AAGA,mBACI,oBAAC,MAAD,mBAEI,oBAAC,KAAD,EAAO,IAAI,CAAC,kCAAZ,CAA+C,MAAM,CAAE,qCACnD,qDACI,2BAAK,SAAS,CAAC,0BAAf,eACI,2BAAK,SAAS,CAAC,0CAAf,CACI,OAAO,CAAE,yBAAMH,CAAAA,IAAI,CAAC,uBAAD,CAAV,EADb,SADJ,cAOI,2BAAK,SAAS,CAAC,0CAAf,CACI,OAAO,CAAE,kBAAM,CACXO,OAAO,CAACC,GAAR,CAAYP,cAAc,CAACG,OAA3B,EACAH,cAAc,CAACG,OAAf,CAAuBC,MAAvB,CAA8BI,UAA9B,CAAyC,cAAsB,IAAnBC,CAAAA,MAAmB,MAAnBA,MAAmB,CAAXC,IAAW,MAAXA,IAAW,CAE3Dd,kBAAkB,gCAAMD,eAAN,MAAuBF,aAAa,CAAEgB,MAAtC,CAA8Cf,aAAa,CAAEgB,IAA7D,GAAlB,CAEAX,IAAI,CAAC,uBAAD,CAAJ,CACH,CALD,EAMH,CATL,gBAPJ,CADJ,cAyBI,2BAAK,SAAS,CAAC,0BAAf,eACI,oBAAC,WAAD,EAAa,GAAG,CAAEC,cAAlB,EADJ,CAzBJ,CADmD,EAAvD,EAFJ,cAkCI,oBAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,CAAoC,MAAM,CAAE,qCACxC,oBAAC,cAAD,EAAgB,eAAe,CAAEL,eAAjC,CACI,kBAAkB,CAAEC,kBADxB,CAEI,eAAe,CAAEK,eAFrB,EADwC,EAA5C,EAlCJ,CADJ,CA2CH,CAzED,CA2EA,cAAef,CAAAA,UAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport store from '../../../../store/store'\r\n\r\nimport LoadedCampForm from './loadedCampForm'\r\n\r\nconst LoadedCamp = () => {\r\n\r\n    const initialState = {\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: null,//file\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    }\r\n    const [newCampaignData, setNewCampaignData] = useState(initialState)\r\n    const [loadFunc, setloadFunc] = useState(null)\r\n\r\n\r\n    const { push } = useHistory(null)\r\n\r\n    const emailEditorRef = useRef(null);\r\n\r\n\r\n\r\n    const loadTheTemplate = (data) => {\r\n        emailEditorRef.current.editor.loadDesign(data)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     console.log(emailEditorRef.current.editor)\r\n    // })\r\n\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/loadedcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/loadedcamp\")}\r\n\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div className=\"addEmailList topButtonsCam subWrapperCam\"\r\n                            onClick={() => {\r\n                                console.log(emailEditorRef.current)\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n\r\n                                    push(\"/dashboard/loadedcamp\")\r\n                                })\r\n                            }\r\n                            }\r\n\r\n                        >\r\n                            Save & Next\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/loadedcamp\" render={() =>\r\n                <LoadedCampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                    loadTheTemplate={loadTheTemplate}\r\n                ></LoadedCampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default LoadedCamp;"]},"metadata":{},"sourceType":"module"}