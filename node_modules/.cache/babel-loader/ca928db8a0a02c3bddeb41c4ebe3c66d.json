{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useHistory}from'react-router-dom';import store from'../../../../store/store';import{storeCampaign}from'../../../../actions';import axios from'axios';var CampForm=function CampForm(_ref){var newCampaignData=_ref.newCampaignData,setNewCampaignData=_ref.setNewCampaignData;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),emailCSV=_useState2[0],setEmailCSV=_useState2[1];useEffect(function(){setEmailCSV(store.getState().emailList);});// store.subscribe(() => {\n// })\nvar options=emailCSV?emailCSV.map(function(list){return/*#__PURE__*/React.createElement(\"option\",{key:list.id,value:list.id},list.name);}):null;var _useHistory=useHistory(null),push=_useHistory.push;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"topNavCam  subWrapperCam\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"dashBodyMainCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"camFormHolder\"},/*#__PURE__*/React.createElement(\"form\",{className:\"formFields  Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leftFields Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"camName\"},\"Campaign Name\"),/*#__PURE__*/React.createElement(\"input\",{value:newCampaignData.campName,type:\"text\",id:\"camName\",name:\"camName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{campName:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"SenderName\"},\"Sender Name\"),/*#__PURE__*/React.createElement(\"input\",{value:newCampaignData.senderName,type:\"text\",id:\"SenderName\",name:\"SenderName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{senderName:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailSub\"},\"Email Subject\"),/*#__PURE__*/React.createElement(\"input\",{value:newCampaignData.emailSub,type:\"text\",id:\"emailSub\",name:\"camName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{emailSub:e.target.value}));}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"rightFields Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"SenderEmail\"},\"Sender Email\"),/*#__PURE__*/React.createElement(\"input\",{value:newCampaignData.senderEmail,type:\"text\",id:\"SenderEmail\",name:\"SenderEmail\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{senderEmail:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subFieldLong Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailList\"},\"Email Attachment\"),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"emailList\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{emailAttachment:e.target.files[0]}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailLists\"},\"Email List\"),/*#__PURE__*/React.createElement(\"select\",{id:\"camName\",name:\"camName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{emailListCVS:e.target.value}));}},options)))),/*#__PURE__*/React.createElement(\"div\",{className:\"formButtons Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sendButton Fields formButtonsCam\",onClick:function onClick(){push(\"/dashboard\");}},\"Back\"),/*#__PURE__*/React.createElement(\"div\",{className:\"createButton Fields formButtonsCam\",onClick:function onClick(){push(\"/dashboard/newcamp/maileditor\");}},\"Next \")))));};export default CampForm;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/campaignHolder/newCampaign/campaignForm.js"],"names":["React","useEffect","useState","useHistory","store","storeCampaign","axios","CampForm","newCampaignData","setNewCampaignData","emailCSV","setEmailCSV","getState","emailList","options","map","list","id","name","push","campName","e","target","value","senderName","emailSub","senderEmail","emailAttachment","files","emailListCVS"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../../store/store'\r\nimport { storeCampaign } from '../../../../actions'\r\nimport axios from 'axios'\r\n\r\nconst CampForm = ({ newCampaignData, setNewCampaignData }) => {\r\n    const [emailCSV, setEmailCSV] = useState([])\r\n\r\n    useEffect(() => {\r\n        setEmailCSV(store.getState().emailList)\r\n    })\r\n    // store.subscribe(() => {\r\n\r\n    // })\r\n\r\n    const options = emailCSV ? emailCSV.map(list =>\r\n        <option key={list.id} value={list.id}>{list.name}</option>\r\n    ) : null;\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                {/* <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div> */}\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input value={newCampaignData.campName} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, campName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input value={newCampaignData.senderName} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input value={newCampaignData.emailSub} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailSub: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input value={newCampaignData.senderEmail} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderEmail: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailAttachment: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"subFieldLong Fields\">*/}\r\n                            {/* <label htmlFor=\"emailBody\">Email Body</label> */}\r\n                            {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                            {/* <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => push(\"/dashboard/newcamp/maileditor\")}\r\n                                >\r\n                                    Deisgn Body\r\n                                </div> */}\r\n                            {/* </div> */}\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailLists\">Email List</label>\r\n                                <select id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.value })}\r\n                                >\r\n                                    {options}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard\")\r\n                            }}\r\n                        >\r\n                            Back{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard/newcamp/maileditor\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Next {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CampForm;"]},"metadata":{},"sourceType":"module"}