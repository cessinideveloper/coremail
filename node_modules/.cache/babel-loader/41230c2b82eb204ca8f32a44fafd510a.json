{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini2\\\\src\\\\components\\\\App.js\";\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport EmailEditor from 'react-email-editor';\nimport { useSpring, animated, config } from 'react-spring';\nimport './App.css'; // import TopNav from './topNav';\n// import LowNav from './lowNav';\n// import FirstBody from './firstBody.txt';\n// import MailEditor from './mailEditor';\n// import LowButtons from './lowButtons';\n// import SendPage from './sendPage';\n\nimport SignMain from './signInPage/signMain';\nimport DashBoard from './Dashboard/dashBoard';\nimport ButtonPopRightLite from '../buttons';\n\nfunction App() {\n  const [activeDic, setActiveDic] = useState({\n    activeSend: false,\n    activeMail: false\n  });\n  const [contract, setContract] = useState(true);\n  const [inputSaveButton, setinputSaveButton] = useSpring(() => ({\n    transform: \" rotateY(0deg) translate(0%,0%) scale(1)\"\n  }));\n  const [inputBox, setinputBox] = useSpring(() => ({\n    width: \"0%\"\n  }));\n  const [button, setButton] = useSpring(() => ({\n    width: \"5%\",\n    height: \"10%\"\n  }));\n  const [round, setRound] = useSpring(() => ({\n    round1: \"50%\",\n    round2: \"50%\",\n    widthfont: \"90%\",\n    xfront: \"5%\"\n  }));\n  const [rest, setRest] = useSpring(() => ({\n    widthfont: \"90%\",\n    xfront: \"5%\"\n  }));\n  const {\n    push\n  } = useHistory();\n  const emailEditorRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const loadTheTemplate = data => {\n    emailEditorRef.current.editor.loadDesign(data);\n  };\n\n  console.log(\"working\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"primaryWindow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard\",\n    render: () => /*#__PURE__*/React.createElement(DashBoard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(SignMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n} // const mapStateToProps = (state) => {\n//   return state\n// }\n// export default connect(mapStateToProps, { loadTempalteAct, newTempalte })(App);\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/suvro/cessini2/src/components/App.js"],"names":["React","useRef","useEffect","useState","useCallback","render","unmountComponentAtNode","HashRouter","Route","Switch","withRouter","useHistory","connect","EmailEditor","useSpring","animated","config","SignMain","DashBoard","ButtonPopRightLite","App","activeDic","setActiveDic","activeSend","activeMail","contract","setContract","inputSaveButton","setinputSaveButton","transform","inputBox","setinputBox","width","button","setButton","height","round","setRound","round1","round2","widthfont","xfront","rest","setRest","push","emailEditorRef","inputRef","loadTheTemplate","data","current","editor","loadDesign","console","log"],"mappings":"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","sourcesContent":["\r\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { render, unmountComponentAtNode } from 'react-dom'\r\nimport { HashRouter, Route, Switch, withRouter } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport EmailEditor from 'react-email-editor';\r\nimport { useSpring, animated, config } from 'react-spring'\r\n\r\nimport './App.css';\r\n// import TopNav from './topNav';\r\n// import LowNav from './lowNav';\r\n// import FirstBody from './firstBody.txt';\r\n// import MailEditor from './mailEditor';\r\n// import LowButtons from './lowButtons';\r\n// import SendPage from './sendPage';\r\nimport SignMain from './signInPage/signMain';\r\nimport DashBoard from './Dashboard/dashBoard';\r\nimport ButtonPopRightLite from '../buttons';\r\n\r\nfunction App() {\r\n  const [activeDic, setActiveDic] = useState({ activeSend: false, activeMail: false })\r\n  const [contract, setContract] = useState(true)\r\n  const [inputSaveButton, setinputSaveButton] = useSpring(() => ({ transform: \" rotateY(0deg) translate(0%,0%) scale(1)\" }))\r\n  const [inputBox, setinputBox] = useSpring(() => ({ width: \"0%\" }))\r\n  const [button, setButton] = useSpring(() => ({ width: \"5%\", height: \"10%\" }))\r\n  const [round, setRound] = useSpring(() => ({ round1: \"50%\", round2: \"50%\", widthfont: \"90%\", xfront: \"5%\" }))\r\n  const [rest, setRest] = useSpring(() => ({ widthfont: \"90%\", xfront: \"5%\" }))\r\n  const { push } = useHistory()\r\n\r\n  const emailEditorRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  const loadTheTemplate = (data) => {\r\n    emailEditorRef.current.editor.loadDesign(data)\r\n  }\r\n  console.log(\"working\")\r\n  return (\r\n    <div className=\"primaryWindow\">\r\n      <Switch>\r\n        <Route path=\"/dashboard\" render={() => <DashBoard></DashBoard>}></Route>\r\n        <Route path=\"/\" render={() => <SignMain></SignMain>}></Route>\r\n      </Switch>\r\n      {/* <div className=\"top\">\r\n                <TopNav activeDic={activeDic}></TopNav>\r\n              </div>\r\n              <div className=\"low\">\r\n                <LowNav></LowNav>\r\n              </div>\r\n          <div className=\"midBodies\">\r\n              <div className=\"MailEditor\">\r\n              </div>\r\n              <div className=\"midButtons\">\r\n                <Switch>\r\n                  <Route path=\"/mailEditor\" render={()=><div className=\"editorWindow\"><EmailEditor ref={emailEditorRef}></EmailEditor></div>}></Route>\r\n                  <Route path=\"/sendPage\" render={()=><SendPage handelDic={setActiveDic} loadTheTemplate={loadTheTemplate}></SendPage>}></Route>\r\n                  <Route exact path=\"/\" render={()=><FirstBody  handelDic={setActiveDic} ></FirstBody>}></Route>\r\n                </Switch>\r\n              </div>\r\n          </div>\r\n          <div className=\"mailEditorButtons\">\r\n              <LowButtons  setinputBox={setinputBox} activeDic={activeDic} handelDic={setActiveDic}></LowButtons>\r\n              <animated.div className=\"templateNameInput\" style={inputBox}>\r\n                <div className=\"Inputbox\">\r\n                    <input ref={inputRef} className=\"Input\" placeholder=\"New Template\"></input>\r\n                    <svg className=\"InputboxSVG\"\r\n                        viewBox=\"0 0 171.601 73.327\"\r\n                        height={277.143}\r\n                        width={648.571}\r\n\r\n                        >\r\n                        <defs>\r\n                            <path id=\"prefix__a\" d=\"M33.262 78.619h148.511v21.652H33.262z\" />\r\n                        </defs>\r\n                        <g transform=\"translate(-19.655 -100.542)\">\r\n                            <rect\r\n                            width={168.577}\r\n                            height={70.304}\r\n                            x={22.679}\r\n                            y={103.565}\r\n                            ry={8.137}\r\n                            fill=\"#989898\"\r\n                            fillOpacity={0.437}\r\n                            />\r\n                            <rect\r\n                            ry={8.137}\r\n                            y={100.542}\r\n                            x={19.655}\r\n                            height={70.304}\r\n                            width={168.577}\r\n                            fill=\"#fff\"\r\n                            />\r\n                            <rect\r\n                            width={92.982}\r\n                            height={20.411}\r\n                            x={85.137}\r\n                            y={125.485}\r\n                            ry={2.362}\r\n                            fill=\"#ff2723\"\r\n                            />\r\n                            <text\r\n                            transform=\"matrix(.46059 0 0 .4885 12.368 92.446)\"\r\n                            fontWeight={700}\r\n                            fontSize={14.111}\r\n                            fontFamily=\"Times New Roman\"\r\n                            fill=\"red\"\r\n                            >\r\n                            <tspan x={33.262} y={91.084}>\r\n                                <tspan>{\"Template Name\"}</tspan>\r\n                            </tspan>\r\n                            </text>\r\n                        </g>\r\n                    </svg>\r\n                    <animated.div className=\"InputSaveButton\"\r\n                        style={inputSaveButton}\r\n                        onMouseEnter={() => {\r\n                            setinputSaveButton({transform:\"rotateY(0deg) translate(0%,0%) scale(1.2)\"})\r\n                        }}\r\n                        onMouseLeave={() => {\r\n                            setinputSaveButton({transform:\"rotateY(0deg) translate(0%,0%) scale(1)\"})\r\n                        }}\r\n                        onClick={() => {\r\n                            emailEditorRef.current.editor.exportHtml(({design,html})=>{\r\n                              newTempalte({key:1, name:inputRef.current.value, data:design})\r\n                              setActiveDic({activeSend:true, activeMail:false})\r\n                              push(\"/sendPage\")\r\n                              setinputBox({width:\"0%\"})\r\n                              })\r\n                          }}\r\n                    >\r\n                        <svg  className=\"InputSaveButtonSVG\"\r\n                            viewBox=\"0 0 37.476 13.39\" height={50.609} width={141.642}>\r\n                            <defs>\r\n                                <path id=\"prefix__a\" d=\"M33.262 78.619H67.28V99.03H33.262z\" />\r\n                            </defs>\r\n                            <g transform=\"translate(-129.429 -176.245)\">\r\n                                <rect\r\n                                width={35.868}\r\n                                height={12.372}\r\n                                x={131.037}\r\n                                y={177.264}\r\n                                ry={2.683}\r\n                                fillOpacity={0.319}\r\n                                />\r\n                                <rect\r\n                                ry={2.683}\r\n                                y={176.245}\r\n                                x={129.429}\r\n                                height={12.372}\r\n                                width={35.868}\r\n                                fill=\"#ff2723\"\r\n                                />\r\n                                <text\r\n                                transform=\"matrix(.43155 0 0 .43155 128.54 145.384)\"\r\n                                fontWeight={700}\r\n                                fontSize={14.111}\r\n                                fontFamily=\"Times New Roman\"\r\n                                fill=\"#fff\"\r\n                                >\r\n                                <tspan x={33.262} y={91.084}>\r\n                                    <tspan>{\"Save\"}</tspan>\r\n                                </tspan>\r\n                                </text>\r\n                                <path\r\n                                d=\"M137.034 180.145a.554.554 0 00-.555.556v4.235c0 .308.248.555.555.555h4.261a.554.554 0 00.556-.555v-3.233a1.133 1.133 0 00-.105-.302l-1.149-1.158-.035-.022a1.175 1.175 0 00-.155-.076zm.389.76h2.698c.093 0 .167.1.167.225v1.096c0 .125-.074.225-.167.225h-2.698c-.093 0-.168-.1-.168-.225v-1.096c0-.124.075-.225.168-.225zm1.731 2.306a.773.76 0 01.004 0 .773.76 0 01.773.76.773.76 0 01-.773.76.773.76 0 01-.773-.76.773.76 0 01.769-.76z\"\r\n                                fill=\"#fff\"\r\n                                />\r\n                            </g>\r\n                            </svg>\r\n                    </animated.div>\r\n                </div>\r\n              </animated.div>\r\n          </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return state\r\n// }\r\n// export default connect(mapStateToProps, { loadTempalteAct, newTempalte })(App);\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}