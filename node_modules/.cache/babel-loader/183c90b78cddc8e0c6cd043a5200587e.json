{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\src\\\\components\\\\Dashboard\\\\newCampaign\\\\campaignForm.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport store from '../../../store/store';\nimport { storeCampaign } from '../../../actions';\n\nconst CampForm = ({\n  newCampaignData,\n  setNewCampaignData\n}) => {\n  const [currentState, setCurrentState] = useState(null);\n  let update = false; // const initialState = {\n  //     senderName: \"\",//string\n  //     senderEmail: \"\",//string\n  //     campName: \"\",//string\n  //     emailSub: \"\",//string\n  //     emailListCVS: null,//file\n  //     emailBodyJSON: null,//JSONobject\n  //     emailBodyHTML: null,//HTMLobject \n  // }\n\n  console.log(store.getState().loadedCampaign.campId == true);\n\n  if (store.getState().loadedCampaign.campId) {\n    setCurrentState(store.getState().campaigns.filter(camps => camps.id === store.getState().loadedCampaign.campId));\n    update = true;\n    console.log(\"got into if\", currentState);\n  } else setCurrentState(newCampaignData);\n\n  const {\n    push\n  } = useHistory(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topNavCam  subWrapperCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createCamp   topButtonsCam subWrapperCam\",\n    onClick: () => push(\"/dashboard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashBodyMainCam  subWrapperCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"camFormHolder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formFields  Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"camName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, \"Campaign Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: currentState.campName,\n    type: \"text\",\n    id: \"camName\",\n    name: \"camName\",\n    onChange: e => setNewCampaignData({ ...currentState,\n      campName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, \"Sender Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: currentState.senderName,\n    type: \"text\",\n    id: \"SenderName\",\n    name: \"SenderName\",\n    onChange: e => setNewCampaignData({ ...currentState,\n      senderName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailSub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"Email Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: currentState.emailSub,\n    type: \"text\",\n    id: \"emailSub\",\n    name: \"camName\",\n    onChange: e => setNewCampaignData({ ...currentState,\n      emailSub: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"Sender Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: currentState.senderEmail,\n    type: \"text\",\n    id: \"SenderEmail\",\n    name: \"SenderEmail\",\n    onChange: e => setNewCampaignData({ ...currentState,\n      senderEmail: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subFieldLong Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, \"Email List\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"emailList\",\n    onChange: e => setNewCampaignData({ ...currentState,\n      emailListCVS: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subFieldLong Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Email Body\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"emailBody\",\n    className: \"desBody Fields formButtonsCam\",\n    onClick: () => push(\"/dashboard/newcamp/maileditor\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Deisgn Body\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formButtons Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sendButton Fields formButtonsCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, update ? \"Update & Send\" : \"Save & Send\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createButton Fields formButtonsCam\",\n    onClick: () => {\n      store.dispatch(storeCampaign(currentState));\n      push(\"/dashboard\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, update ? \"Update & Exit\" : \"Save & Exit\")))));\n};\n\nexport default CampForm;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/newCampaign/campaignForm.js"],"names":["React","useState","useHistory","store","storeCampaign","CampForm","newCampaignData","setNewCampaignData","currentState","setCurrentState","update","console","log","getState","loadedCampaign","campId","campaigns","filter","camps","id","push","campName","e","target","value","senderName","emailSub","senderEmail","emailListCVS","files","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../store/store'\r\nimport { storeCampaign } from '../../../actions'\r\n\r\nconst CampForm = ({ newCampaignData, setNewCampaignData }) => {\r\n\r\n    const [currentState, setCurrentState] = useState(null)\r\n    let update = false\r\n    // const initialState = {\r\n    //     senderName: \"\",//string\r\n    //     senderEmail: \"\",//string\r\n    //     campName: \"\",//string\r\n    //     emailSub: \"\",//string\r\n    //     emailListCVS: null,//file\r\n    //     emailBodyJSON: null,//JSONobject\r\n    //     emailBodyHTML: null,//HTMLobject \r\n    // }\r\n    console.log(store.getState().loadedCampaign.campId == true)\r\n    if (store.getState().loadedCampaign.campId) {\r\n        setCurrentState(store.getState().campaigns.filter(camps => camps.id === store.getState().loadedCampaign.campId))\r\n        update = true\r\n        console.log(\"got into if\", currentState)\r\n    } else setCurrentState(newCampaignData)\r\n\r\n\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div>\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input value={currentState.campName} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...currentState, campName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input value={currentState.senderName} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...currentState, senderName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input value={currentState.emailSub} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...currentState, emailSub: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input value={currentState.senderEmail} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...currentState, senderEmail: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email List</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                    onChange={e => setNewCampaignData({ ...currentState, emailListCVS: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailBody\">Email Body</label>\r\n                                {/* <select id=\"camName\" name=\"camName\">\r\n                                <option value=\"NoEmailList\">Please Create Email List</option>\r\n                            </select> */}\r\n                                <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => push(\"/dashboard/newcamp/maileditor\")}\r\n                                >\r\n                                    Deisgn Body\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n\r\n                        >\r\n                            {update ? \"Update & Send\" : \"Save & Send\"}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                store.dispatch(storeCampaign(currentState));\r\n                                push(\"/dashboard\")\r\n                            }\r\n                            }\r\n                        >\r\n                            {update ? \"Update & Exit\" : \"Save & Exit\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CampForm;"]},"metadata":{},"sourceType":"module"}