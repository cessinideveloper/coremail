{"ast":null,"code":"import { combineReducers } from 'redux';\nconst initialUser = {\n  username: \"\",\n  //string\n  password: \"\",\n  //string\n  email: \"\",\n  //string\n  id: 0,\n  //number\n  token: \"\" //string\n\n};\n\nconst storeUser = (user = initialUser, action) => {\n  if (action.type === \"STORE_USER\") {\n    return action.payload;\n  }\n\n  return user;\n};\n\nconst rootReducer = combineReducers({\n  userData: storeUser\n});\nexport default rootReducer; // const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\n//     if (action.type === \"MODE_SELECTED\"){\n//         if (action.payload === \"Send\"){\n//             return {activeSend:true, activeMail:false}\n//         }else if (action.payload === \"Mail\"){\n//             return {activeSend:false, activeMail:true}\n//         }else\n//             return mode \n//     }\n//     return mode \n// };","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/reducers/index.js"],"names":["combineReducers","initialUser","username","password","email","id","token","storeUser","user","action","type","payload","rootReducer","userData"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AACH;AACbC,EAAAA,QAAQ,EAAE,EAFM;AAEF;AACdC,EAAAA,KAAK,EAAE,EAHS;AAGF;AACdC,EAAAA,EAAE,EAAE,CAJY;AAIT;AACPC,EAAAA,KAAK,EAAE,EALS,CAKP;;AALO,CAApB;;AAQA,MAAMC,SAAS,GAAG,CAACC,IAAI,GAAGP,WAAR,EAAqBQ,MAArB,KAAgC;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9B,WAAOD,MAAM,CAACE,OAAd;AACH;;AACD,SAAOH,IAAP;AACH,CALD;;AAQA,MAAMI,WAAW,GAAGZ,eAAe,CAAC;AAChCa,EAAAA,QAAQ,EAAEN;AADsB,CAAD,CAAnC;AAIA,eAAeK,WAAf,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst initialUser = {\r\n    username: \"\",//string\r\n    password: \"\", //string\r\n    email: \"\",    //string\r\n    id: 0, //number\r\n    token: \"\"//string\r\n}\r\n\r\nconst storeUser = (user = initialUser, action) => {\r\n    if (action.type === \"STORE_USER\") {\r\n        return action.payload\r\n    }\r\n    return user\r\n};\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    userData: storeUser\r\n});\r\n\r\nexport default rootReducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\r\n//     if (action.type === \"MODE_SELECTED\"){\r\n//         if (action.payload === \"Send\"){\r\n//             return {activeSend:true, activeMail:false}\r\n//         }else if (action.payload === \"Mail\"){\r\n//             return {activeSend:false, activeMail:true}\r\n//         }else\r\n//             return mode \r\n//     }\r\n//     return mode \r\n// };\r\n"]},"metadata":{},"sourceType":"module"}