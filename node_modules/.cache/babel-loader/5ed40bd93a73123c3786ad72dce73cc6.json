{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\suvro\\\\cessini-mail\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import'./newcam.css';import{useFormik}from'formik';import{useHistory}from'react-router-dom';import{Route,Switch}from'react-router-dom';import EmailEditor from'react-email-editor';import axios from'axios';import store from'../../../../store/store';import CampForm from'./campaignForm';import{writeFile}from'fs-web';var NewCam=function NewCam(){var _useState=useState({senderName:\"\",//string\nsenderEmail:\"\",//string\ncampName:\"\",//string\nemailSub:\"\",//string\nemailListCVS:0,//number\nemailAttachment:null,//null\nemailBodyJSON:null,//JSONobject\nemailBodyHTML:null//HTMLobject \n}),_useState2=_slicedToArray(_useState,2),newCampaignData=_useState2[0],setNewCampaignData=_useState2[1];var _useHistory=useHistory(null),push=_useHistory.push;var emailEditorRef=useRef(null);return/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/dashboard/newcamp/maileditor\",render:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"topNavCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"createCamp   topButtonsCam subWrapperCam\",onClick:function onClick(){return push(\"/dashboard/newcamp\");}},\"Back\"),/*#__PURE__*/React.createElement(\"div\",{className:\"addEmailList topButtonsCam subWrapperCam\",onClick:function onClick(){return emailEditorRef.current.editor.exportHtml(function(_ref){var design=_ref.design,html=_ref.html;setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{emailBodyJSON:design,emailBodyHTML:html}));setTimeout(function(){var dataForm=new FormData();var Jda=JSON.stringify(newCampaignData.emailBodyJSON);var newHtml=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return writeFile(\"sendPack.html\",html);case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function newHtml(){return _ref2.apply(this,arguments);};}();console.log(newHtml());dataForm.append(\"name\",newCampaignData.campName);dataForm.append(\"sender_name\",newCampaignData.senderName);dataForm.append(\"sender_email\",newCampaignData.senderEmail);dataForm.append(\"email_subject\",newCampaignData.emailSub);dataForm.append(\"my_customer\",store.getState().userData.id);dataForm.append(\"camp_emails\",Number(newCampaignData.emailListCVS));dataForm.append(\"email_message\",\"will see\");dataForm.append(\"temp_json\",Jda);dataForm.append(\"ht\",html);dataForm.append(\"attachment\",newCampaignData.emailAttachment);//newCampaignData.emailAttachment)\naxios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",dataForm).catch(function(er){if(er.response){if(er.response.status===500){document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click();}}});console.log({name:newCampaignData.campName,sender_name:newCampaignData.senderName,sender_email:newCampaignData.senderEmail,email_subject:newCampaignData.emailSub,my_customer:store.getState().userData.id,camp_emails:Number(newCampaignData.emailListCVS),email_message:\"will see\",temp_json:design,ht:newCampaignData.emailBodyHTML,attachment:newCampaignData.emailAttachment});},0);});}},\"Save & Send\")),/*#__PURE__*/React.createElement(\"div\",{className:\"dashBodyMain  subWrapper\"},/*#__PURE__*/React.createElement(EmailEditor,{ref:emailEditorRef})));}}),/*#__PURE__*/React.createElement(Route,{path:\"/dashboard/newcamp\",render:function render(){return/*#__PURE__*/React.createElement(CampForm,{newCampaignData:newCampaignData,setNewCampaignData:setNewCampaignData});}}));};export default NewCam;","map":{"version":3,"sources":["C:/Users/suvro/cessini-mail/src/components/Dashboard/campaignHolder/newCampaign/newCam.js"],"names":["React","useState","useRef","useFormik","useHistory","Route","Switch","EmailEditor","axios","store","CampForm","writeFile","NewCam","senderName","senderEmail","campName","emailSub","emailListCVS","emailAttachment","emailBodyJSON","emailBodyHTML","newCampaignData","setNewCampaignData","push","emailEditorRef","current","editor","exportHtml","design","html","setTimeout","dataForm","FormData","Jda","JSON","stringify","newHtml","console","log","append","getState","userData","id","Number","post","catch","er","response","status","document","getElementsByClassName","click","name","sender_name","sender_email","email_subject","my_customer","camp_emails","email_message","temp_json","ht","attachment"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport axios from 'axios'\r\nimport store from '../../../../store/store'\r\nimport CampForm from './campaignForm'\r\nimport { writeFile } from 'fs-web'\r\n\r\n\r\nconst NewCam = () => {\r\n    const [newCampaignData, setNewCampaignData] = useState({\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: 0,//number\r\n        emailAttachment: null,//null\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    })\r\n    const { push } = useHistory(null)\r\n    const emailEditorRef = useRef(null);\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/newcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/newcamp\")}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div className=\"addEmailList topButtonsCam subWrapperCam\"\r\n                            onClick={() =>\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n                                    setTimeout(() => {\r\n                                        let dataForm = new FormData\r\n                                        let Jda = JSON.stringify(newCampaignData.emailBodyJSON)\r\n                                        const newHtml = async () => await (writeFile(\"sendPack.html\", html))\r\n                                        console.log(newHtml())\r\n                                        dataForm.append(\"name\", newCampaignData.campName)\r\n                                        dataForm.append(\"sender_name\", newCampaignData.senderName)\r\n                                        dataForm.append(\"sender_email\", newCampaignData.senderEmail)\r\n                                        dataForm.append(\"email_subject\", newCampaignData.emailSub)\r\n                                        dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                        dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS))\r\n                                        dataForm.append(\"email_message\", \"will see\")\r\n                                        dataForm.append(\"temp_json\", Jda)\r\n                                        dataForm.append(\"ht\", html)\r\n                                        dataForm.append(\"attachment\", newCampaignData.emailAttachment)//newCampaignData.emailAttachment)\r\n                                        axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",\r\n                                            dataForm\r\n                                        ).catch(er => {\r\n                                            if (er.response) {\r\n                                                if (er.response.status === 500) {\r\n                                                    document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        )\r\n\r\n                                        console.log({\r\n                                            name: newCampaignData.campName,\r\n                                            sender_name: newCampaignData.senderName,\r\n                                            sender_email: newCampaignData.senderEmail,\r\n                                            email_subject: newCampaignData.emailSub,\r\n                                            my_customer: store.getState().userData.id,\r\n                                            camp_emails: Number(newCampaignData.emailListCVS),\r\n                                            email_message: \"will see\",\r\n                                            temp_json: design,\r\n                                            ht: newCampaignData.emailBodyHTML,\r\n                                            attachment: newCampaignData.emailAttachment\r\n                                        })\r\n                                    }, 0)\r\n\r\n                                })\r\n                            }\r\n\r\n                        >\r\n                            Save & Send\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/newcamp\" render={() =>\r\n                <CampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                ></CampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default NewCam;"]},"metadata":{},"sourceType":"module"}